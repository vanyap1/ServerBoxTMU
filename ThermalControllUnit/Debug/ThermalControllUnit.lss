
ThermalControllUnit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800100  00000f12  00000fa6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f12  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000088  00800162  00800162  00001008  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001008  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001064  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000250  00000000  00000000  000010a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000022fe  00000000  00000000  000012f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001154  00000000  00000000  000035ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001337  00000000  00000000  00004742  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005bc  00000000  00000000  00005a7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009b8  00000000  00000000  00006038  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001553  00000000  00000000  000069f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e0  00000000  00000000  00007f43  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
   8:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
   c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  10:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  14:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  18:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  1c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  20:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  24:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  28:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  2c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  30:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  34:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  38:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  3c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  40:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  44:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  48:	0c 94 58 03 	jmp	0x6b0	; 0x6b0 <__vector_18>
  4c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  50:	0c 94 8e 03 	jmp	0x71c	; 0x71c <__vector_20>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__vector_21>
  58:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  5c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  60:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  64:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  68:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  6c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  70:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  74:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  78:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  7c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  80:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  84:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <__vector_33>
  88:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e1       	ldi	r30, 0x12	; 18
  a0:	ff e0       	ldi	r31, 0x0F	; 15
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
  a4:	05 90       	lpm	r0, Z+
  a6:	0d 92       	st	X+, r0
  a8:	a2 36       	cpi	r26, 0x62	; 98
  aa:	b1 07       	cpc	r27, r17
  ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>

000000ae <__do_clear_bss>:
  ae:	21 e0       	ldi	r18, 0x01	; 1
  b0:	a2 e6       	ldi	r26, 0x62	; 98
  b2:	b1 e0       	ldi	r27, 0x01	; 1
  b4:	01 c0       	rjmp	.+2      	; 0xb8 <.do_clear_bss_start>

000000b6 <.do_clear_bss_loop>:
  b6:	1d 92       	st	X+, r1

000000b8 <.do_clear_bss_start>:
  b8:	aa 3e       	cpi	r26, 0xEA	; 234
  ba:	b2 07       	cpc	r27, r18
  bc:	e1 f7       	brne	.-8      	; 0xb6 <.do_clear_bss_loop>
  be:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <main>
  c2:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <_exit>

000000c6 <__bad_interrupt>:
  c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ca <__vector_21>:
 */ 
#include "adc_hal.h"

volatile static uint8_t adc_convert_done = 1;

ISR(ADC_vect){
  ca:	1f 92       	push	r1
  cc:	0f 92       	push	r0
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	0f 92       	push	r0
  d2:	11 24       	eor	r1, r1
  d4:	8f 93       	push	r24
	adc_convert_done = 1;
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
}
  dc:	8f 91       	pop	r24
  de:	0f 90       	pop	r0
  e0:	0f be       	out	0x3f, r0	; 63
  e2:	0f 90       	pop	r0
  e4:	1f 90       	pop	r1
  e6:	18 95       	reti

000000e8 <adc_init>:

void adc_init(void){
	ADMUX |= REFS_1_1V << REFS0 | 1 << REFS1;
  e8:	87 b1       	in	r24, 0x07	; 7
  ea:	80 6c       	ori	r24, 0xC0	; 192
  ec:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= 1 << ADEN | 1 << ADIE | 0b111 << ADPS0;
  ee:	86 b1       	in	r24, 0x06	; 6
  f0:	8f 68       	ori	r24, 0x8F	; 143
  f2:	86 b9       	out	0x06, r24	; 6
  f4:	08 95       	ret

000000f6 <gpio_set_pin_level>:

}


void gpio_set_port_level(gpio *GPIOx, const uint8_t mask){
	*GPIOx->port=mask;
  f6:	66 23       	and	r22, r22
  f8:	99 f0       	breq	.+38     	; 0x120 <gpio_set_pin_level+0x2a>
  fa:	dc 01       	movw	r26, r24
  fc:	ed 91       	ld	r30, X+
  fe:	fc 91       	ld	r31, X
 100:	11 97       	sbiw	r26, 0x01	; 1
 102:	21 e0       	ldi	r18, 0x01	; 1
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	a9 01       	movw	r20, r18
 108:	12 96       	adiw	r26, 0x02	; 2
 10a:	0c 90       	ld	r0, X
 10c:	02 c0       	rjmp	.+4      	; 0x112 <gpio_set_pin_level+0x1c>
 10e:	44 0f       	add	r20, r20
 110:	55 1f       	adc	r21, r21
 112:	0a 94       	dec	r0
 114:	e2 f7       	brpl	.-8      	; 0x10e <gpio_set_pin_level+0x18>
 116:	ca 01       	movw	r24, r20
 118:	90 81       	ld	r25, Z
 11a:	89 2b       	or	r24, r25
 11c:	80 83       	st	Z, r24
 11e:	08 95       	ret
 120:	dc 01       	movw	r26, r24
 122:	ed 91       	ld	r30, X+
 124:	fc 91       	ld	r31, X
 126:	11 97       	sbiw	r26, 0x01	; 1
 128:	21 e0       	ldi	r18, 0x01	; 1
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	a9 01       	movw	r20, r18
 12e:	12 96       	adiw	r26, 0x02	; 2
 130:	0c 90       	ld	r0, X
 132:	02 c0       	rjmp	.+4      	; 0x138 <gpio_set_pin_level+0x42>
 134:	44 0f       	add	r20, r20
 136:	55 1f       	adc	r21, r21
 138:	0a 94       	dec	r0
 13a:	e2 f7       	brpl	.-8      	; 0x134 <gpio_set_pin_level+0x3e>
 13c:	ca 01       	movw	r24, r20
 13e:	80 95       	com	r24
 140:	90 81       	ld	r25, Z
 142:	89 23       	and	r24, r25
 144:	80 83       	st	Z, r24
 146:	08 95       	ret

00000148 <gpio_set_pin_direction>:
 148:	fc 01       	movw	r30, r24
 14a:	30 81       	ld	r19, Z
 14c:	21 81       	ldd	r18, Z+1	; 0x01
 14e:	61 30       	cpi	r22, 0x01	; 1
 150:	99 f0       	breq	.+38     	; 0x178 <gpio_set_pin_direction+0x30>
 152:	18 f0       	brcs	.+6      	; 0x15a <gpio_set_pin_direction+0x12>
 154:	62 30       	cpi	r22, 0x02	; 2
 156:	f1 f0       	breq	.+60     	; 0x194 <gpio_set_pin_direction+0x4c>
 158:	08 95       	ret
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	02 80       	ldd	r0, Z+2	; 0x02
 160:	02 c0       	rjmp	.+4      	; 0x166 <gpio_set_pin_direction+0x1e>
 162:	88 0f       	add	r24, r24
 164:	99 1f       	adc	r25, r25
 166:	0a 94       	dec	r0
 168:	e2 f7       	brpl	.-8      	; 0x162 <gpio_set_pin_direction+0x1a>
 16a:	e3 2f       	mov	r30, r19
 16c:	f2 2f       	mov	r31, r18
 16e:	80 95       	com	r24
 170:	92 91       	ld	r25, -Z
 172:	89 23       	and	r24, r25
 174:	80 83       	st	Z, r24
 176:	08 95       	ret
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	02 80       	ldd	r0, Z+2	; 0x02
 17e:	02 c0       	rjmp	.+4      	; 0x184 <gpio_set_pin_direction+0x3c>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	0a 94       	dec	r0
 186:	e2 f7       	brpl	.-8      	; 0x180 <gpio_set_pin_direction+0x38>
 188:	e3 2f       	mov	r30, r19
 18a:	f2 2f       	mov	r31, r18
 18c:	92 91       	ld	r25, -Z
 18e:	89 2b       	or	r24, r25
 190:	80 83       	st	Z, r24
 192:	08 95       	ret
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	ac 01       	movw	r20, r24
 19a:	02 80       	ldd	r0, Z+2	; 0x02
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <gpio_set_pin_direction+0x5a>
 19e:	44 0f       	add	r20, r20
 1a0:	55 1f       	adc	r21, r21
 1a2:	0a 94       	dec	r0
 1a4:	e2 f7       	brpl	.-8      	; 0x19e <gpio_set_pin_direction+0x56>
 1a6:	a3 2f       	mov	r26, r19
 1a8:	b2 2f       	mov	r27, r18
 1aa:	40 95       	com	r20
 1ac:	2e 91       	ld	r18, -X
 1ae:	42 23       	and	r20, r18
 1b0:	4c 93       	st	X, r20
 1b2:	a0 81       	ld	r26, Z
 1b4:	b1 81       	ldd	r27, Z+1	; 0x01
 1b6:	02 80       	ldd	r0, Z+2	; 0x02
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <gpio_set_pin_direction+0x76>
 1ba:	88 0f       	add	r24, r24
 1bc:	99 1f       	adc	r25, r25
 1be:	0a 94       	dec	r0
 1c0:	e2 f7       	brpl	.-8      	; 0x1ba <gpio_set_pin_direction+0x72>
 1c2:	80 95       	com	r24
 1c4:	9c 91       	ld	r25, X
 1c6:	89 23       	and	r24, r25
 1c8:	8c 93       	st	X, r24
 1ca:	08 95       	ret

000001cc <gpio_toggle_pin_level>:
}

void gpio_toggle_pin_level(gpio *GPIOx){
 1cc:	cf 93       	push	r28
 1ce:	df 93       	push	r29
 1d0:	dc 01       	movw	r26, r24
	uint8_t *tmp_port = GPIOx->port-2;
 1d2:	ed 91       	ld	r30, X+
 1d4:	fc 91       	ld	r31, X
 1d6:	11 97       	sbiw	r26, 0x01	; 1
	(*tmp_port & (1 << GPIOx->pin)) ? (*GPIOx->port &= ~(1 << GPIOx->pin)) : (*GPIOx->port |= 1 << GPIOx->pin);
 1d8:	ef 01       	movw	r28, r30
 1da:	22 97       	sbiw	r28, 0x02	; 2
 1dc:	98 81       	ld	r25, Y
 1de:	12 96       	adiw	r26, 0x02	; 2
 1e0:	2c 91       	ld	r18, X
 1e2:	89 2f       	mov	r24, r25
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 2e       	mov	r0, r18
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <gpio_toggle_pin_level+0x22>
 1ea:	95 95       	asr	r25
 1ec:	87 95       	ror	r24
 1ee:	0a 94       	dec	r0
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <gpio_toggle_pin_level+0x1e>
 1f2:	80 ff       	sbrs	r24, 0
 1f4:	0c c0       	rjmp	.+24     	; 0x20e <gpio_toggle_pin_level+0x42>
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <gpio_toggle_pin_level+0x34>
 1fc:	88 0f       	add	r24, r24
 1fe:	99 1f       	adc	r25, r25
 200:	2a 95       	dec	r18
 202:	e2 f7       	brpl	.-8      	; 0x1fc <gpio_toggle_pin_level+0x30>
 204:	80 95       	com	r24
 206:	90 81       	ld	r25, Z
 208:	89 23       	and	r24, r25
 20a:	80 83       	st	Z, r24
 20c:	0a c0       	rjmp	.+20     	; 0x222 <gpio_toggle_pin_level+0x56>
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	02 c0       	rjmp	.+4      	; 0x218 <gpio_toggle_pin_level+0x4c>
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	2a 95       	dec	r18
 21a:	e2 f7       	brpl	.-8      	; 0x214 <gpio_toggle_pin_level+0x48>
 21c:	90 81       	ld	r25, Z
 21e:	89 2b       	or	r24, r25
 220:	80 83       	st	Z, r24
 222:	df 91       	pop	r29
 224:	cf 91       	pop	r28
 226:	08 95       	ret

00000228 <BCDtoDEC>:
	twi_write(RTC_ADDR,0x00,rtc_raw,sizeof(rtc_raw));
}

uint8_t BCDtoDEC(uint8_t val)
{
	return ((val / 0x10) * 10) + (val % 0x10);
 228:	98 2f       	mov	r25, r24
 22a:	92 95       	swap	r25
 22c:	9f 70       	andi	r25, 0x0F	; 15
 22e:	99 0f       	add	r25, r25
 230:	29 2f       	mov	r18, r25
 232:	22 0f       	add	r18, r18
 234:	22 0f       	add	r18, r18
 236:	92 0f       	add	r25, r18
 238:	8f 70       	andi	r24, 0x0F	; 15
}
 23a:	89 0f       	add	r24, r25
 23c:	08 95       	ret

0000023e <rtc_sync>:
	twi_write(RTC_ADDR,CONTROLL_REG,rtc_config_3,sizeof(rtc_config_3));
	
	
}

void rtc_sync(rtc_date *RTCx){
 23e:	0f 93       	push	r16
 240:	1f 93       	push	r17
 242:	cf 93       	push	r28
 244:	df 93       	push	r29
 246:	cd b7       	in	r28, 0x3d	; 61
 248:	de b7       	in	r29, 0x3e	; 62
 24a:	27 97       	sbiw	r28, 0x07	; 7
 24c:	0f b6       	in	r0, 0x3f	; 63
 24e:	f8 94       	cli
 250:	de bf       	out	0x3e, r29	; 62
 252:	0f be       	out	0x3f, r0	; 63
 254:	cd bf       	out	0x3d, r28	; 61
 256:	8c 01       	movw	r16, r24
	uint8_t rtc_raw[7];
	twi_read(RTC_ADDR, 0x00, rtc_raw, sizeof(rtc_raw));
 258:	27 e0       	ldi	r18, 0x07	; 7
 25a:	30 e0       	ldi	r19, 0x00	; 0
 25c:	ae 01       	movw	r20, r28
 25e:	4f 5f       	subi	r20, 0xFF	; 255
 260:	5f 4f       	sbci	r21, 0xFF	; 255
 262:	60 e0       	ldi	r22, 0x00	; 0
 264:	82 e3       	ldi	r24, 0x32	; 50
 266:	0e 94 79 02 	call	0x4f2	; 0x4f2 <twi_read>
	RTCx->second=BCDtoDEC(rtc_raw[0]);
 26a:	89 81       	ldd	r24, Y+1	; 0x01
 26c:	0e 94 14 01 	call	0x228	; 0x228 <BCDtoDEC>
 270:	f8 01       	movw	r30, r16
 272:	80 83       	st	Z, r24
	RTCx->minute=BCDtoDEC(rtc_raw[1]);
 274:	8a 81       	ldd	r24, Y+2	; 0x02
 276:	0e 94 14 01 	call	0x228	; 0x228 <BCDtoDEC>
 27a:	f8 01       	movw	r30, r16
 27c:	81 83       	std	Z+1, r24	; 0x01
	RTCx->hour=BCDtoDEC(rtc_raw[2]);
 27e:	8b 81       	ldd	r24, Y+3	; 0x03
 280:	0e 94 14 01 	call	0x228	; 0x228 <BCDtoDEC>
 284:	f8 01       	movw	r30, r16
 286:	82 83       	std	Z+2, r24	; 0x02
	RTCx->dayofweek=rtc_raw[3];
 288:	8c 81       	ldd	r24, Y+4	; 0x04
 28a:	87 83       	std	Z+7, r24	; 0x07
	RTCx->date=BCDtoDEC(rtc_raw[4]);
 28c:	8d 81       	ldd	r24, Y+5	; 0x05
 28e:	0e 94 14 01 	call	0x228	; 0x228 <BCDtoDEC>
 292:	f8 01       	movw	r30, r16
 294:	83 83       	std	Z+3, r24	; 0x03
	RTCx->month=BCDtoDEC(rtc_raw[5]);
 296:	8e 81       	ldd	r24, Y+6	; 0x06
 298:	0e 94 14 01 	call	0x228	; 0x228 <BCDtoDEC>
 29c:	f8 01       	movw	r30, r16
 29e:	84 83       	std	Z+4, r24	; 0x04
	RTCx->year=BCDtoDEC(rtc_raw[6]);
 2a0:	8f 81       	ldd	r24, Y+7	; 0x07
 2a2:	0e 94 14 01 	call	0x228	; 0x228 <BCDtoDEC>
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	f8 01       	movw	r30, r16
 2aa:	96 83       	std	Z+6, r25	; 0x06
 2ac:	85 83       	std	Z+5, r24	; 0x05
}
 2ae:	27 96       	adiw	r28, 0x07	; 7
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	f8 94       	cli
 2b4:	de bf       	out	0x3e, r29	; 62
 2b6:	0f be       	out	0x3f, r0	; 63
 2b8:	cd bf       	out	0x3d, r28	; 61
 2ba:	df 91       	pop	r29
 2bc:	cf 91       	pop	r28
 2be:	1f 91       	pop	r17
 2c0:	0f 91       	pop	r16
 2c2:	08 95       	ret

000002c4 <DECtoBCD>:
}

// BCDtoDEC -- convert decimal to binary-coded decimal (BCD)
uint8_t DECtoBCD(uint8_t val)
{
	return ((val / 10) * 0x10) + (val % 10);
 2c4:	9d ec       	ldi	r25, 0xCD	; 205
 2c6:	89 9f       	mul	r24, r25
 2c8:	91 2d       	mov	r25, r1
 2ca:	11 24       	eor	r1, r1
 2cc:	96 95       	lsr	r25
 2ce:	96 95       	lsr	r25
 2d0:	96 95       	lsr	r25
 2d2:	39 2f       	mov	r19, r25
 2d4:	33 0f       	add	r19, r19
 2d6:	23 2f       	mov	r18, r19
 2d8:	22 0f       	add	r18, r18
 2da:	22 0f       	add	r18, r18
 2dc:	23 0f       	add	r18, r19
 2de:	82 1b       	sub	r24, r18
}
 2e0:	20 e1       	ldi	r18, 0x10	; 16
 2e2:	92 9f       	mul	r25, r18
 2e4:	80 0d       	add	r24, r0
 2e6:	11 24       	eor	r1, r1
 2e8:	08 95       	ret

000002ea <rtc_set>:
	RTCx->dayofweek=rtc_raw[3];
	RTCx->date=BCDtoDEC(rtc_raw[4]);
	RTCx->month=BCDtoDEC(rtc_raw[5]);
	RTCx->year=BCDtoDEC(rtc_raw[6]);
}
void rtc_set(rtc_date *RTCx){
 2ea:	0f 93       	push	r16
 2ec:	1f 93       	push	r17
 2ee:	cf 93       	push	r28
 2f0:	df 93       	push	r29
 2f2:	cd b7       	in	r28, 0x3d	; 61
 2f4:	de b7       	in	r29, 0x3e	; 62
 2f6:	27 97       	sbiw	r28, 0x07	; 7
 2f8:	0f b6       	in	r0, 0x3f	; 63
 2fa:	f8 94       	cli
 2fc:	de bf       	out	0x3e, r29	; 62
 2fe:	0f be       	out	0x3f, r0	; 63
 300:	cd bf       	out	0x3d, r28	; 61
 302:	8c 01       	movw	r16, r24
	uint8_t rtc_raw[7];
	rtc_raw[0]=DECtoBCD(RTCx->second);
 304:	fc 01       	movw	r30, r24
 306:	80 81       	ld	r24, Z
 308:	0e 94 62 01 	call	0x2c4	; 0x2c4 <DECtoBCD>
 30c:	89 83       	std	Y+1, r24	; 0x01
	rtc_raw[1]=DECtoBCD(RTCx->minute);
 30e:	f8 01       	movw	r30, r16
 310:	81 81       	ldd	r24, Z+1	; 0x01
 312:	0e 94 62 01 	call	0x2c4	; 0x2c4 <DECtoBCD>
 316:	8a 83       	std	Y+2, r24	; 0x02
	rtc_raw[2]=DECtoBCD(RTCx->hour);
 318:	f8 01       	movw	r30, r16
 31a:	82 81       	ldd	r24, Z+2	; 0x02
 31c:	0e 94 62 01 	call	0x2c4	; 0x2c4 <DECtoBCD>
 320:	8b 83       	std	Y+3, r24	; 0x03
	rtc_raw[3]=RTCx->dayofweek;
 322:	f8 01       	movw	r30, r16
 324:	87 81       	ldd	r24, Z+7	; 0x07
 326:	8c 83       	std	Y+4, r24	; 0x04
	rtc_raw[4]=DECtoBCD(RTCx->date);
 328:	83 81       	ldd	r24, Z+3	; 0x03
 32a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <DECtoBCD>
 32e:	8d 83       	std	Y+5, r24	; 0x05
	rtc_raw[5]=DECtoBCD(RTCx->month);
 330:	f8 01       	movw	r30, r16
 332:	84 81       	ldd	r24, Z+4	; 0x04
 334:	0e 94 62 01 	call	0x2c4	; 0x2c4 <DECtoBCD>
 338:	8e 83       	std	Y+6, r24	; 0x06
	rtc_raw[6]=DECtoBCD(RTCx->year);
 33a:	f8 01       	movw	r30, r16
 33c:	85 81       	ldd	r24, Z+5	; 0x05
 33e:	0e 94 62 01 	call	0x2c4	; 0x2c4 <DECtoBCD>
 342:	8f 83       	std	Y+7, r24	; 0x07
	twi_write(RTC_ADDR,0x00,rtc_raw,sizeof(rtc_raw));
 344:	27 e0       	ldi	r18, 0x07	; 7
 346:	30 e0       	ldi	r19, 0x00	; 0
 348:	ae 01       	movw	r20, r28
 34a:	4f 5f       	subi	r20, 0xFF	; 255
 34c:	5f 4f       	sbci	r21, 0xFF	; 255
 34e:	60 e0       	ldi	r22, 0x00	; 0
 350:	82 e3       	ldi	r24, 0x32	; 50
 352:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <twi_write>
}
 356:	27 96       	adiw	r28, 0x07	; 7
 358:	0f b6       	in	r0, 0x3f	; 63
 35a:	f8 94       	cli
 35c:	de bf       	out	0x3e, r29	; 62
 35e:	0f be       	out	0x3f, r0	; 63
 360:	cd bf       	out	0x3d, r28	; 61
 362:	df 91       	pop	r29
 364:	cf 91       	pop	r28
 366:	1f 91       	pop	r17
 368:	0f 91       	pop	r16
 36a:	08 95       	ret

0000036c <spi_init>:
	}
}
	
	
void spi_init(){
	gpio_set_pin_direction(&spi_tx_pin , PORT_DIR_OUT);
 36c:	61 e0       	ldi	r22, 0x01	; 1
 36e:	87 e0       	ldi	r24, 0x07	; 7
 370:	91 e0       	ldi	r25, 0x01	; 1
 372:	0e 94 a4 00 	call	0x148	; 0x148 <gpio_set_pin_direction>
	gpio_set_pin_level(&spi_tx_pin, true);
 376:	61 e0       	ldi	r22, 0x01	; 1
 378:	87 e0       	ldi	r24, 0x07	; 7
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	0e 94 7b 00 	call	0xf6	; 0xf6 <gpio_set_pin_level>
	gpio_set_pin_direction(&spi_ss_pin , PORT_DIR_OUT);
 380:	61 e0       	ldi	r22, 0x01	; 1
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	91 e0       	ldi	r25, 0x01	; 1
 386:	0e 94 a4 00 	call	0x148	; 0x148 <gpio_set_pin_direction>
	gpio_set_pin_level(&spi_ss_pin, true);
 38a:	61 e0       	ldi	r22, 0x01	; 1
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	91 e0       	ldi	r25, 0x01	; 1
 390:	0e 94 7b 00 	call	0xf6	; 0xf6 <gpio_set_pin_level>
	
	gpio_set_pin_direction(&spi_clk_pin , PORT_DIR_OUT);
 394:	61 e0       	ldi	r22, 0x01	; 1
 396:	84 e0       	ldi	r24, 0x04	; 4
 398:	91 e0       	ldi	r25, 0x01	; 1
 39a:	0e 94 a4 00 	call	0x148	; 0x148 <gpio_set_pin_direction>
	gpio_set_pin_level(&spi_clk_pin, false);
 39e:	60 e0       	ldi	r22, 0x00	; 0
 3a0:	84 e0       	ldi	r24, 0x04	; 4
 3a2:	91 e0       	ldi	r25, 0x01	; 1
 3a4:	0e 94 7b 00 	call	0xf6	; 0xf6 <gpio_set_pin_level>
	//DDRC |= (1 << DDC1);
	//DDRE |= (1 << DDE3);	
	SPCR |= (1 << SPIE) | (1 << SPE) | (0 << DORD) | (1 << MSTR)  | (0 << CPOL) | (0 << CPHA) | (0b00 << SPR0);
 3a8:	8d b1       	in	r24, 0x0d	; 13
 3aa:	80 6d       	ori	r24, 0xD0	; 208
 3ac:	8d b9       	out	0x0d, r24	; 13
	SPCR |= (0 << MSTR);
 3ae:	8d b1       	in	r24, 0x0d	; 13
 3b0:	8d b9       	out	0x0d, r24	; 13
	//Bit 3 – CPOL1: Clock1 Polarity
	//Bit 2 – CPHA1: Clock1 Phase
	//Bits 1:0 – SPR1n: SPI1 Clock Rate Select n [n = 1:0]
	//
	
	SPSR |= (1 << SPI2X);
 3b2:	8e b1       	in	r24, 0x0e	; 14
 3b4:	81 60       	ori	r24, 0x01	; 1
 3b6:	8e b9       	out	0x0e, r24	; 14
 3b8:	08 95       	ret

000003ba <twi_start>:
	
	
	twi_stop();
	
	return err;
}
 3ba:	85 ea       	ldi	r24, 0xA5	; 165
 3bc:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
 3c0:	80 e0       	ldi	r24, 0x00	; 0
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	05 c0       	rjmp	.+10     	; 0x3d0 <twi_start+0x16>
 3c6:	01 96       	adiw	r24, 0x01	; 1
 3c8:	80 34       	cpi	r24, 0x40	; 64
 3ca:	26 e0       	ldi	r18, 0x06	; 6
 3cc:	92 07       	cpc	r25, r18
 3ce:	30 f4       	brcc	.+12     	; 0x3dc <twi_start+0x22>
 3d0:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <status>
 3d4:	28 30       	cpi	r18, 0x08	; 8
 3d6:	b9 f7       	brne	.-18     	; 0x3c6 <twi_start+0xc>
 3d8:	80 e0       	ldi	r24, 0x00	; 0
 3da:	08 95       	ret
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	08 95       	ret

000003e0 <twi_stop>:
 3e0:	85 e9       	ldi	r24, 0x95	; 149
 3e2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
 3e6:	08 95       	ret

000003e8 <twi_restart>:
 3e8:	85 ea       	ldi	r24, 0xA5	; 165
 3ea:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
 3ee:	80 e0       	ldi	r24, 0x00	; 0
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	05 c0       	rjmp	.+10     	; 0x3fe <twi_restart+0x16>
 3f4:	01 96       	adiw	r24, 0x01	; 1
 3f6:	80 34       	cpi	r24, 0x40	; 64
 3f8:	26 e0       	ldi	r18, 0x06	; 6
 3fa:	92 07       	cpc	r25, r18
 3fc:	30 f4       	brcc	.+12     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3fe:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <status>
 402:	20 31       	cpi	r18, 0x10	; 16
 404:	b9 f7       	brne	.-18     	; 0x3f4 <twi_restart+0xc>
 406:	80 e0       	ldi	r24, 0x00	; 0
 408:	08 95       	ret
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	08 95       	ret

0000040e <twi_addr_write_ack>:
 40e:	85 e8       	ldi	r24, 0x85	; 133
 410:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
 414:	80 e0       	ldi	r24, 0x00	; 0
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	05 c0       	rjmp	.+10     	; 0x424 <twi_addr_write_ack+0x16>
 41a:	01 96       	adiw	r24, 0x01	; 1
 41c:	80 34       	cpi	r24, 0x40	; 64
 41e:	26 e0       	ldi	r18, 0x06	; 6
 420:	92 07       	cpc	r25, r18
 422:	30 f4       	brcc	.+12     	; 0x430 <twi_addr_write_ack+0x22>
 424:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <status>
 428:	28 31       	cpi	r18, 0x18	; 24
 42a:	b9 f7       	brne	.-18     	; 0x41a <twi_addr_write_ack+0xc>
 42c:	80 e0       	ldi	r24, 0x00	; 0
 42e:	08 95       	ret
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	08 95       	ret

00000434 <twi_data_write_ack>:
 434:	85 e8       	ldi	r24, 0x85	; 133
 436:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
 43a:	80 e0       	ldi	r24, 0x00	; 0
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	05 c0       	rjmp	.+10     	; 0x44a <twi_data_write_ack+0x16>
 440:	01 96       	adiw	r24, 0x01	; 1
 442:	80 34       	cpi	r24, 0x40	; 64
 444:	26 e0       	ldi	r18, 0x06	; 6
 446:	92 07       	cpc	r25, r18
 448:	30 f4       	brcc	.+12     	; 0x456 <twi_data_write_ack+0x22>
 44a:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <status>
 44e:	28 32       	cpi	r18, 0x28	; 40
 450:	b9 f7       	brne	.-18     	; 0x440 <twi_data_write_ack+0xc>
 452:	80 e0       	ldi	r24, 0x00	; 0
 454:	08 95       	ret
 456:	81 e0       	ldi	r24, 0x01	; 1
 458:	08 95       	ret

0000045a <twi_addr_read_ack>:
 45a:	85 e8       	ldi	r24, 0x85	; 133
 45c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
 460:	80 e0       	ldi	r24, 0x00	; 0
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	05 c0       	rjmp	.+10     	; 0x470 <twi_addr_read_ack+0x16>
 466:	01 96       	adiw	r24, 0x01	; 1
 468:	80 34       	cpi	r24, 0x40	; 64
 46a:	26 e0       	ldi	r18, 0x06	; 6
 46c:	92 07       	cpc	r25, r18
 46e:	30 f4       	brcc	.+12     	; 0x47c <twi_addr_read_ack+0x22>
 470:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <status>
 474:	20 34       	cpi	r18, 0x40	; 64
 476:	b9 f7       	brne	.-18     	; 0x466 <twi_addr_read_ack+0xc>
 478:	80 e0       	ldi	r24, 0x00	; 0
 47a:	08 95       	ret
 47c:	81 e0       	ldi	r24, 0x01	; 1
 47e:	08 95       	ret

00000480 <twi_data_read_ack>:
 480:	88 23       	and	r24, r24
 482:	89 f0       	breq	.+34     	; 0x4a6 <twi_data_read_ack+0x26>
 484:	85 ec       	ldi	r24, 0xC5	; 197
 486:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
 48a:	80 e0       	ldi	r24, 0x00	; 0
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	05 c0       	rjmp	.+10     	; 0x49a <twi_data_read_ack+0x1a>
 490:	01 96       	adiw	r24, 0x01	; 1
 492:	80 34       	cpi	r24, 0x40	; 64
 494:	26 e0       	ldi	r18, 0x06	; 6
 496:	92 07       	cpc	r25, r18
 498:	b8 f4       	brcc	.+46     	; 0x4c8 <twi_data_read_ack+0x48>
 49a:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <status>
 49e:	20 35       	cpi	r18, 0x50	; 80
 4a0:	b9 f7       	brne	.-18     	; 0x490 <twi_data_read_ack+0x10>
 4a2:	80 e0       	ldi	r24, 0x00	; 0
 4a4:	08 95       	ret
 4a6:	85 e8       	ldi	r24, 0x85	; 133
 4a8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
 4ac:	80 e0       	ldi	r24, 0x00	; 0
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	05 c0       	rjmp	.+10     	; 0x4bc <twi_data_read_ack+0x3c>
 4b2:	01 96       	adiw	r24, 0x01	; 1
 4b4:	80 34       	cpi	r24, 0x40	; 64
 4b6:	26 e0       	ldi	r18, 0x06	; 6
 4b8:	92 07       	cpc	r25, r18
 4ba:	40 f4       	brcc	.+16     	; 0x4cc <twi_data_read_ack+0x4c>
 4bc:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <status>
 4c0:	28 35       	cpi	r18, 0x58	; 88
 4c2:	b9 f7       	brne	.-18     	; 0x4b2 <twi_data_read_ack+0x32>
 4c4:	80 e0       	ldi	r24, 0x00	; 0
 4c6:	08 95       	ret
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	08 95       	ret
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	08 95       	ret

000004d0 <__vector_33>:
 4d0:	1f 92       	push	r1
 4d2:	0f 92       	push	r0
 4d4:	0f b6       	in	r0, 0x3f	; 63
 4d6:	0f 92       	push	r0
 4d8:	11 24       	eor	r1, r1
 4da:	8f 93       	push	r24
 4dc:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7f0071>
 4e0:	88 7f       	andi	r24, 0xF8	; 248
 4e2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <status>
 4e6:	8f 91       	pop	r24
 4e8:	0f 90       	pop	r0
 4ea:	0f be       	out	0x3f, r0	; 63
 4ec:	0f 90       	pop	r0
 4ee:	1f 90       	pop	r1
 4f0:	18 95       	reti

000004f2 <twi_read>:
 4f2:	cf 92       	push	r12
 4f4:	df 92       	push	r13
 4f6:	ef 92       	push	r14
 4f8:	ff 92       	push	r15
 4fa:	0f 93       	push	r16
 4fc:	1f 93       	push	r17
 4fe:	cf 93       	push	r28
 500:	d8 2e       	mov	r13, r24
 502:	c6 2e       	mov	r12, r22
 504:	7a 01       	movw	r14, r20
 506:	89 01       	movw	r16, r18
 508:	0e 94 dd 01 	call	0x3ba	; 0x3ba <twi_start>
 50c:	c8 2f       	mov	r28, r24
 50e:	88 23       	and	r24, r24
 510:	21 f0       	breq	.+8      	; 0x51a <twi_read+0x28>
 512:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 516:	8c 2f       	mov	r24, r28
 518:	5f c0       	rjmp	.+190    	; 0x5d8 <twi_read+0xe6>
 51a:	8d 2d       	mov	r24, r13
 51c:	88 0f       	add	r24, r24
 51e:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7f0073>
 522:	0e 94 07 02 	call	0x40e	; 0x40e <twi_addr_write_ack>
 526:	c8 2f       	mov	r28, r24
 528:	88 23       	and	r24, r24
 52a:	21 f0       	breq	.+8      	; 0x534 <twi_read+0x42>
 52c:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 530:	8c 2f       	mov	r24, r28
 532:	52 c0       	rjmp	.+164    	; 0x5d8 <twi_read+0xe6>
 534:	c0 92 73 00 	sts	0x0073, r12	; 0x800073 <__TEXT_REGION_LENGTH__+0x7f0073>
 538:	0e 94 1a 02 	call	0x434	; 0x434 <twi_data_write_ack>
 53c:	c8 2f       	mov	r28, r24
 53e:	88 23       	and	r24, r24
 540:	21 f0       	breq	.+8      	; 0x54a <twi_read+0x58>
 542:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 546:	8c 2f       	mov	r24, r28
 548:	47 c0       	rjmp	.+142    	; 0x5d8 <twi_read+0xe6>
 54a:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <twi_restart>
 54e:	c8 2f       	mov	r28, r24
 550:	88 23       	and	r24, r24
 552:	21 f0       	breq	.+8      	; 0x55c <twi_read+0x6a>
 554:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 558:	8c 2f       	mov	r24, r28
 55a:	3e c0       	rjmp	.+124    	; 0x5d8 <twi_read+0xe6>
 55c:	8d 2d       	mov	r24, r13
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	88 0f       	add	r24, r24
 562:	99 1f       	adc	r25, r25
 564:	81 60       	ori	r24, 0x01	; 1
 566:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7f0073>
 56a:	0e 94 2d 02 	call	0x45a	; 0x45a <twi_addr_read_ack>
 56e:	c8 2f       	mov	r28, r24
 570:	88 23       	and	r24, r24
 572:	c1 f0       	breq	.+48     	; 0x5a4 <twi_read+0xb2>
 574:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 578:	8c 2f       	mov	r24, r28
 57a:	2e c0       	rjmp	.+92     	; 0x5d8 <twi_read+0xe6>
 57c:	81 e0       	ldi	r24, 0x01	; 1
 57e:	0e 94 40 02 	call	0x480	; 0x480 <twi_data_read_ack>
 582:	c8 2f       	mov	r28, r24
 584:	88 23       	and	r24, r24
 586:	21 f0       	breq	.+8      	; 0x590 <twi_read+0x9e>
 588:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 58c:	8c 2f       	mov	r24, r28
 58e:	24 c0       	rjmp	.+72     	; 0x5d8 <twi_read+0xe6>
 590:	f7 01       	movw	r30, r14
 592:	ec 0d       	add	r30, r12
 594:	fd 1d       	adc	r31, r13
 596:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7f0073>
 59a:	80 83       	st	Z, r24
 59c:	8f ef       	ldi	r24, 0xFF	; 255
 59e:	c8 1a       	sub	r12, r24
 5a0:	d8 0a       	sbc	r13, r24
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <twi_read+0xb6>
 5a4:	c1 2c       	mov	r12, r1
 5a6:	d1 2c       	mov	r13, r1
 5a8:	c8 01       	movw	r24, r16
 5aa:	01 97       	sbiw	r24, 0x01	; 1
 5ac:	c8 16       	cp	r12, r24
 5ae:	d9 06       	cpc	r13, r25
 5b0:	28 f3       	brcs	.-54     	; 0x57c <twi_read+0x8a>
 5b2:	80 e0       	ldi	r24, 0x00	; 0
 5b4:	0e 94 40 02 	call	0x480	; 0x480 <twi_data_read_ack>
 5b8:	c8 2f       	mov	r28, r24
 5ba:	88 23       	and	r24, r24
 5bc:	21 f0       	breq	.+8      	; 0x5c6 <twi_read+0xd4>
 5be:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 5c2:	8c 2f       	mov	r24, r28
 5c4:	09 c0       	rjmp	.+18     	; 0x5d8 <twi_read+0xe6>
 5c6:	f7 01       	movw	r30, r14
 5c8:	ec 0d       	add	r30, r12
 5ca:	fd 1d       	adc	r31, r13
 5cc:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7f0073>
 5d0:	80 83       	st	Z, r24
 5d2:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 5d6:	8c 2f       	mov	r24, r28
 5d8:	cf 91       	pop	r28
 5da:	1f 91       	pop	r17
 5dc:	0f 91       	pop	r16
 5de:	ff 90       	pop	r15
 5e0:	ef 90       	pop	r14
 5e2:	df 90       	pop	r13
 5e4:	cf 90       	pop	r12
 5e6:	08 95       	ret

000005e8 <twi_write>:
 5e8:	cf 92       	push	r12
 5ea:	df 92       	push	r13
 5ec:	ef 92       	push	r14
 5ee:	ff 92       	push	r15
 5f0:	0f 93       	push	r16
 5f2:	1f 93       	push	r17
 5f4:	cf 93       	push	r28
 5f6:	18 2f       	mov	r17, r24
 5f8:	06 2f       	mov	r16, r22
 5fa:	6a 01       	movw	r12, r20
 5fc:	79 01       	movw	r14, r18
 5fe:	0e 94 dd 01 	call	0x3ba	; 0x3ba <twi_start>
 602:	c8 2f       	mov	r28, r24
 604:	88 23       	and	r24, r24
 606:	21 f0       	breq	.+8      	; 0x610 <twi_write+0x28>
 608:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 60c:	8c 2f       	mov	r24, r28
 60e:	31 c0       	rjmp	.+98     	; 0x672 <twi_write+0x8a>
 610:	11 0f       	add	r17, r17
 612:	10 93 73 00 	sts	0x0073, r17	; 0x800073 <__TEXT_REGION_LENGTH__+0x7f0073>
 616:	0e 94 07 02 	call	0x40e	; 0x40e <twi_addr_write_ack>
 61a:	c8 2f       	mov	r28, r24
 61c:	88 23       	and	r24, r24
 61e:	21 f0       	breq	.+8      	; 0x628 <twi_write+0x40>
 620:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 624:	8c 2f       	mov	r24, r28
 626:	25 c0       	rjmp	.+74     	; 0x672 <twi_write+0x8a>
 628:	00 93 73 00 	sts	0x0073, r16	; 0x800073 <__TEXT_REGION_LENGTH__+0x7f0073>
 62c:	0e 94 1a 02 	call	0x434	; 0x434 <twi_data_write_ack>
 630:	c8 2f       	mov	r28, r24
 632:	88 23       	and	r24, r24
 634:	b1 f0       	breq	.+44     	; 0x662 <twi_write+0x7a>
 636:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 63a:	8c 2f       	mov	r24, r28
 63c:	1a c0       	rjmp	.+52     	; 0x672 <twi_write+0x8a>
 63e:	f6 01       	movw	r30, r12
 640:	e0 0f       	add	r30, r16
 642:	f1 1f       	adc	r31, r17
 644:	80 81       	ld	r24, Z
 646:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7f0073>
 64a:	0e 94 1a 02 	call	0x434	; 0x434 <twi_data_write_ack>
 64e:	c8 2f       	mov	r28, r24
 650:	88 23       	and	r24, r24
 652:	21 f0       	breq	.+8      	; 0x65c <twi_write+0x74>
 654:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 658:	8c 2f       	mov	r24, r28
 65a:	0b c0       	rjmp	.+22     	; 0x672 <twi_write+0x8a>
 65c:	0f 5f       	subi	r16, 0xFF	; 255
 65e:	1f 4f       	sbci	r17, 0xFF	; 255
 660:	02 c0       	rjmp	.+4      	; 0x666 <twi_write+0x7e>
 662:	00 e0       	ldi	r16, 0x00	; 0
 664:	10 e0       	ldi	r17, 0x00	; 0
 666:	0e 15       	cp	r16, r14
 668:	1f 05       	cpc	r17, r15
 66a:	48 f3       	brcs	.-46     	; 0x63e <twi_write+0x56>
 66c:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_stop>
 670:	8c 2f       	mov	r24, r28
 672:	cf 91       	pop	r28
 674:	1f 91       	pop	r17
 676:	0f 91       	pop	r16
 678:	ff 90       	pop	r15
 67a:	ef 90       	pop	r14
 67c:	df 90       	pop	r13
 67e:	cf 90       	pop	r12
 680:	08 95       	ret

00000682 <twi_init>:




void twi_init(uint32_t speed){
 682:	9b 01       	movw	r18, r22
 684:	ac 01       	movw	r20, r24
	
	uint32_t gen_t = 0;
	gen_t = (((F_CPU/speed) - 16) / 2) & 0xFF;
 686:	60 e0       	ldi	r22, 0x00	; 0
 688:	72 e1       	ldi	r23, 0x12	; 18
 68a:	8a e7       	ldi	r24, 0x7A	; 122
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	0e 94 6d 04 	call	0x8da	; 0x8da <__udivmodsi4>
 692:	da 01       	movw	r26, r20
 694:	c9 01       	movw	r24, r18
 696:	40 97       	sbiw	r24, 0x10	; 16
 698:	a1 09       	sbc	r26, r1
 69a:	b1 09       	sbc	r27, r1
 69c:	b6 95       	lsr	r27
 69e:	a7 95       	ror	r26
 6a0:	97 95       	ror	r25
 6a2:	87 95       	ror	r24
	TWBR = gen_t & 0xFF;
 6a4:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f0070>
	TWCR = (1 << TWEN) | (1 << TWIE);
 6a8:	85 e0       	ldi	r24, 0x05	; 5
 6aa:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
 6ae:	08 95       	ret

000006b0 <__vector_18>:
	read_complete = false;
	rx_count=0;
	return test_array;
}

ISR(USART0_RX_vect){
 6b0:	1f 92       	push	r1
 6b2:	0f 92       	push	r0
 6b4:	0f b6       	in	r0, 0x3f	; 63
 6b6:	0f 92       	push	r0
 6b8:	11 24       	eor	r1, r1
 6ba:	8f 93       	push	r24
 6bc:	9f 93       	push	r25
 6be:	ef 93       	push	r30
 6c0:	ff 93       	push	r31
	
	//volatile static uint16_t rx_write_pos = 0;
	test_array[rx_count] = UDR0;
 6c2:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <rx_count>
 6c6:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <rx_count+0x1>
 6ca:	8c b1       	in	r24, 0x0c	; 12
 6cc:	ee 59       	subi	r30, 0x9E	; 158
 6ce:	fe 4f       	sbci	r31, 0xFE	; 254
 6d0:	80 83       	st	Z, r24
	if (test_array[rx_count] == 0x0D){
 6d2:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <rx_count>
 6d6:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <rx_count+0x1>
 6da:	ee 59       	subi	r30, 0x9E	; 158
 6dc:	fe 4f       	sbci	r31, 0xFE	; 254
 6de:	80 81       	ld	r24, Z
 6e0:	8d 30       	cpi	r24, 0x0D	; 13
 6e2:	51 f4       	brne	.+20     	; 0x6f8 <__vector_18+0x48>
		read_complete = true;
 6e4:	81 e0       	ldi	r24, 0x01	; 1
 6e6:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <read_complete>
		test_array[rx_count+1] = 0;
 6ea:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <rx_count>
 6ee:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <rx_count+0x1>
 6f2:	ed 59       	subi	r30, 0x9D	; 157
 6f4:	fe 4f       	sbci	r31, 0xFE	; 254
 6f6:	10 82       	st	Z, r1
	}
	rx_count +=1;
 6f8:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <rx_count>
 6fc:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <rx_count+0x1>
 700:	01 96       	adiw	r24, 0x01	; 1
 702:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <rx_count+0x1>
 706:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <rx_count>
	
}
 70a:	ff 91       	pop	r31
 70c:	ef 91       	pop	r30
 70e:	9f 91       	pop	r25
 710:	8f 91       	pop	r24
 712:	0f 90       	pop	r0
 714:	0f be       	out	0x3f, r0	; 63
 716:	0f 90       	pop	r0
 718:	1f 90       	pop	r1
 71a:	18 95       	reti

0000071c <__vector_20>:

//memset(rx_buffer, 0, sizeof(rx_buffer));

ISR(USART0_TX_vect){
 71c:	1f 92       	push	r1
 71e:	0f 92       	push	r0
 720:	0f b6       	in	r0, 0x3f	; 63
 722:	0f 92       	push	r0
 724:	11 24       	eor	r1, r1
 726:	8f 93       	push	r24
	uart_tx_busy = 1;
 728:	81 e0       	ldi	r24, 0x01	; 1
 72a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <uart_tx_busy>
}
 72e:	8f 91       	pop	r24
 730:	0f 90       	pop	r0
 732:	0f be       	out	0x3f, r0	; 63
 734:	0f 90       	pop	r0
 736:	1f 90       	pop	r1
 738:	18 95       	reti

0000073a <uart_init>:

void uart_init(uint32_t baud,uint8_t high_speed){
	
	uint8_t speed = 16;
	
	if(high_speed != 0){
 73a:	44 23       	and	r20, r20
 73c:	29 f0       	breq	.+10     	; 0x748 <uart_init+0xe>
		speed = 8;
		UCSR0A |= 1 << U2X0;
 73e:	2b b1       	in	r18, 0x0b	; 11
 740:	22 60       	ori	r18, 0x02	; 2
 742:	2b b9       	out	0x0b, r18	; 11
void uart_init(uint32_t baud,uint8_t high_speed){
	
	uint8_t speed = 16;
	
	if(high_speed != 0){
		speed = 8;
 744:	a8 e0       	ldi	r26, 0x08	; 8
 746:	01 c0       	rjmp	.+2      	; 0x74a <uart_init+0x10>
}


void uart_init(uint32_t baud,uint8_t high_speed){
	
	uint8_t speed = 16;
 748:	a0 e1       	ldi	r26, 0x10	; 16
	if(high_speed != 0){
		speed = 8;
		UCSR0A |= 1 << U2X0;
	}
	
	baud = (F_CPU/(speed*baud)) - 1;
 74a:	b0 e0       	ldi	r27, 0x00	; 0
 74c:	9b 01       	movw	r18, r22
 74e:	ac 01       	movw	r20, r24
 750:	0e 94 8f 04 	call	0x91e	; 0x91e <__muluhisi3>
 754:	9b 01       	movw	r18, r22
 756:	ac 01       	movw	r20, r24
 758:	60 e0       	ldi	r22, 0x00	; 0
 75a:	72 e1       	ldi	r23, 0x12	; 18
 75c:	8a e7       	ldi	r24, 0x7A	; 122
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	0e 94 6d 04 	call	0x8da	; 0x8da <__udivmodsi4>
 764:	ba 01       	movw	r22, r20
 766:	a9 01       	movw	r20, r18
 768:	41 50       	subi	r20, 0x01	; 1
 76a:	51 09       	sbc	r21, r1
 76c:	61 09       	sbc	r22, r1
 76e:	71 09       	sbc	r23, r1
	
	UBRR0H = (baud & 0x0F00) >> 8;
 770:	db 01       	movw	r26, r22
 772:	ca 01       	movw	r24, r20
 774:	88 27       	eor	r24, r24
 776:	9f 70       	andi	r25, 0x0F	; 15
 778:	aa 27       	eor	r26, r26
 77a:	bb 27       	eor	r27, r27
 77c:	89 2f       	mov	r24, r25
 77e:	9a 2f       	mov	r25, r26
 780:	ab 2f       	mov	r26, r27
 782:	bb 27       	eor	r27, r27
 784:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7f0090>
	UBRR0L = (baud & 0x00FF);
 788:	49 b9       	out	0x09, r20	; 9
	
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0) | (1 << RXCIE0) | (1 << TXCIE0);
 78a:	8a b1       	in	r24, 0x0a	; 10
 78c:	88 6d       	ori	r24, 0xD8	; 216
 78e:	8a b9       	out	0x0a, r24	; 10
	UCSR0C=0b10000110;
 790:	86 e8       	ldi	r24, 0x86	; 134
 792:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7f0095>
 796:	08 95       	ret

00000798 <uart_send_byte>:
}


void uart_send_byte(uint8_t c){
	while(uart_tx_busy == 0);
 798:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <uart_tx_busy>
 79c:	99 23       	and	r25, r25
 79e:	e1 f3       	breq	.-8      	; 0x798 <uart_send_byte>
	uart_tx_busy = 0;
 7a0:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <uart_tx_busy>
	UDR0 = c;
 7a4:	8c b9       	out	0x0c, r24	; 12
 7a6:	08 95       	ret

000007a8 <main>:
};	
	
	
int main(void)
{
    uart_init(250000,1);
 7a8:	41 e0       	ldi	r20, 0x01	; 1
 7aa:	60 e9       	ldi	r22, 0x90	; 144
 7ac:	70 ed       	ldi	r23, 0xD0	; 208
 7ae:	83 e0       	ldi	r24, 0x03	; 3
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	0e 94 9d 03 	call	0x73a	; 0x73a <uart_init>
    twi_init(400000);
 7b6:	60 e8       	ldi	r22, 0x80	; 128
 7b8:	7a e1       	ldi	r23, 0x1A	; 26
 7ba:	86 e0       	ldi	r24, 0x06	; 6
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	0e 94 41 03 	call	0x682	; 0x682 <twi_init>
	
	DDRC = 0xFF; //Set portC as output
 7c2:	8f ef       	ldi	r24, 0xFF	; 255
 7c4:	84 bb       	out	0x14, r24	; 20
	PORTC = 0xFF; //Set to HW driver to off state
 7c6:	85 bb       	out	0x15, r24	; 21
	
    gpio_set_pin_direction(&ldA , PORT_DIR_OUT); gpio_set_pin_level(&ldA, true);
 7c8:	61 e0       	ldi	r22, 0x01	; 1
 7ca:	87 e2       	ldi	r24, 0x27	; 39
 7cc:	91 e0       	ldi	r25, 0x01	; 1
 7ce:	0e 94 a4 00 	call	0x148	; 0x148 <gpio_set_pin_direction>
 7d2:	61 e0       	ldi	r22, 0x01	; 1
 7d4:	87 e2       	ldi	r24, 0x27	; 39
 7d6:	91 e0       	ldi	r25, 0x01	; 1
 7d8:	0e 94 7b 00 	call	0xf6	; 0xf6 <gpio_set_pin_level>
    gpio_set_pin_direction(&ldB , PORT_DIR_OUT); gpio_set_pin_level(&ldB, true);
 7dc:	61 e0       	ldi	r22, 0x01	; 1
 7de:	84 e2       	ldi	r24, 0x24	; 36
 7e0:	91 e0       	ldi	r25, 0x01	; 1
 7e2:	0e 94 a4 00 	call	0x148	; 0x148 <gpio_set_pin_direction>
 7e6:	61 e0       	ldi	r22, 0x01	; 1
 7e8:	84 e2       	ldi	r24, 0x24	; 36
 7ea:	91 e0       	ldi	r25, 0x01	; 1
 7ec:	0e 94 7b 00 	call	0xf6	; 0xf6 <gpio_set_pin_level>
    gpio_set_pin_direction(&ld1 , PORT_DIR_OUT); gpio_set_pin_level(&ld1, true);
 7f0:	61 e0       	ldi	r22, 0x01	; 1
 7f2:	81 e2       	ldi	r24, 0x21	; 33
 7f4:	91 e0       	ldi	r25, 0x01	; 1
 7f6:	0e 94 a4 00 	call	0x148	; 0x148 <gpio_set_pin_direction>
 7fa:	61 e0       	ldi	r22, 0x01	; 1
 7fc:	81 e2       	ldi	r24, 0x21	; 33
 7fe:	91 e0       	ldi	r25, 0x01	; 1
 800:	0e 94 7b 00 	call	0xf6	; 0xf6 <gpio_set_pin_level>
    gpio_set_pin_direction(&ld2 , PORT_DIR_OUT); gpio_set_pin_level(&ld2, true);
 804:	61 e0       	ldi	r22, 0x01	; 1
 806:	8e e1       	ldi	r24, 0x1E	; 30
 808:	91 e0       	ldi	r25, 0x01	; 1
 80a:	0e 94 a4 00 	call	0x148	; 0x148 <gpio_set_pin_direction>
 80e:	61 e0       	ldi	r22, 0x01	; 1
 810:	8e e1       	ldi	r24, 0x1E	; 30
 812:	91 e0       	ldi	r25, 0x01	; 1
 814:	0e 94 7b 00 	call	0xf6	; 0xf6 <gpio_set_pin_level>
	gpio_set_pin_direction(&ioEn , PORT_DIR_OUT); gpio_set_pin_level(&ioEn, true);
 818:	61 e0       	ldi	r22, 0x01	; 1
 81a:	8b e1       	ldi	r24, 0x1B	; 27
 81c:	91 e0       	ldi	r25, 0x01	; 1
 81e:	0e 94 a4 00 	call	0x148	; 0x148 <gpio_set_pin_direction>
 822:	61 e0       	ldi	r22, 0x01	; 1
 824:	8b e1       	ldi	r24, 0x1B	; 27
 826:	91 e0       	ldi	r25, 0x01	; 1
 828:	0e 94 7b 00 	call	0xf6	; 0xf6 <gpio_set_pin_level>
    
	
	sei();
 82c:	78 94       	sei
	stdout = &mystdout;
 82e:	8a e2       	ldi	r24, 0x2A	; 42
 830:	91 e0       	ldi	r25, 0x01	; 1
 832:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <__iob+0x3>
 836:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <__iob+0x2>
	rtc_set(&sys_rtc);
 83a:	8d e0       	ldi	r24, 0x0D	; 13
 83c:	91 e0       	ldi	r25, 0x01	; 1
 83e:	0e 94 75 01 	call	0x2ea	; 0x2ea <rtc_set>
	//rtc_int_enable(&sys_rtc ,0);
	adc_init();
 842:	0e 94 74 00 	call	0xe8	; 0xe8 <adc_init>
	spi_init();
 846:	0e 94 b6 01 	call	0x36c	; 0x36c <spi_init>
	
	
    while (1) 
    {
		gpio_set_pin_level(&out3, true);
 84a:	61 e0       	ldi	r22, 0x01	; 1
 84c:	85 e1       	ldi	r24, 0x15	; 21
 84e:	91 e0       	ldi	r25, 0x01	; 1
 850:	0e 94 7b 00 	call	0xf6	; 0xf6 <gpio_set_pin_level>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 854:	2f ef       	ldi	r18, 0xFF	; 255
 856:	84 e3       	ldi	r24, 0x34	; 52
 858:	9c e0       	ldi	r25, 0x0C	; 12
 85a:	21 50       	subi	r18, 0x01	; 1
 85c:	80 40       	sbci	r24, 0x00	; 0
 85e:	90 40       	sbci	r25, 0x00	; 0
 860:	e1 f7       	brne	.-8      	; 0x85a <__EEPROM_REGION_LENGTH__+0x5a>
 862:	00 c0       	rjmp	.+0      	; 0x864 <__EEPROM_REGION_LENGTH__+0x64>
 864:	00 00       	nop
		_delay_ms(500);
		gpio_set_pin_level(&out3, false);
 866:	60 e0       	ldi	r22, 0x00	; 0
 868:	85 e1       	ldi	r24, 0x15	; 21
 86a:	91 e0       	ldi	r25, 0x01	; 1
 86c:	0e 94 7b 00 	call	0xf6	; 0xf6 <gpio_set_pin_level>
 870:	2f ef       	ldi	r18, 0xFF	; 255
 872:	84 e3       	ldi	r24, 0x34	; 52
 874:	9c e0       	ldi	r25, 0x0C	; 12
 876:	21 50       	subi	r18, 0x01	; 1
 878:	80 40       	sbci	r24, 0x00	; 0
 87a:	90 40       	sbci	r25, 0x00	; 0
 87c:	e1 f7       	brne	.-8      	; 0x876 <__EEPROM_REGION_LENGTH__+0x76>
 87e:	00 c0       	rjmp	.+0      	; 0x880 <__EEPROM_REGION_LENGTH__+0x80>
 880:	00 00       	nop
		_delay_ms(500);
		gpio_toggle_pin_level(&out1);
 882:	88 e1       	ldi	r24, 0x18	; 24
 884:	91 e0       	ldi	r25, 0x01	; 1
 886:	0e 94 e6 00 	call	0x1cc	; 0x1cc <gpio_toggle_pin_level>
		
		
		rtc_sync(&sys_rtc);
 88a:	8d e0       	ldi	r24, 0x0D	; 13
 88c:	91 e0       	ldi	r25, 0x01	; 1
 88e:	0e 94 1f 01 	call	0x23e	; 0x23e <rtc_sync>
		printf("Time: %02d-%02d-20%02d; %02d:%02d:%02d\r\n", sys_rtc.date, sys_rtc.month, sys_rtc.year, sys_rtc.hour, sys_rtc.minute, sys_rtc.second);
 892:	ed e0       	ldi	r30, 0x0D	; 13
 894:	f1 e0       	ldi	r31, 0x01	; 1
 896:	40 81       	ld	r20, Z
 898:	31 81       	ldd	r19, Z+1	; 0x01
 89a:	22 81       	ldd	r18, Z+2	; 0x02
 89c:	94 81       	ldd	r25, Z+4	; 0x04
 89e:	83 81       	ldd	r24, Z+3	; 0x03
 8a0:	1f 92       	push	r1
 8a2:	4f 93       	push	r20
 8a4:	1f 92       	push	r1
 8a6:	3f 93       	push	r19
 8a8:	1f 92       	push	r1
 8aa:	2f 93       	push	r18
 8ac:	26 81       	ldd	r18, Z+6	; 0x06
 8ae:	2f 93       	push	r18
 8b0:	25 81       	ldd	r18, Z+5	; 0x05
 8b2:	2f 93       	push	r18
 8b4:	1f 92       	push	r1
 8b6:	9f 93       	push	r25
 8b8:	1f 92       	push	r1
 8ba:	8f 93       	push	r24
 8bc:	88 e3       	ldi	r24, 0x38	; 56
 8be:	91 e0       	ldi	r25, 0x01	; 1
 8c0:	9f 93       	push	r25
 8c2:	8f 93       	push	r24
 8c4:	0e 94 a9 04 	call	0x952	; 0x952 <printf>
 8c8:	8d b7       	in	r24, 0x3d	; 61
 8ca:	9e b7       	in	r25, 0x3e	; 62
 8cc:	0e 96       	adiw	r24, 0x0e	; 14
 8ce:	0f b6       	in	r0, 0x3f	; 63
 8d0:	f8 94       	cli
 8d2:	9e bf       	out	0x3e, r25	; 62
 8d4:	0f be       	out	0x3f, r0	; 63
 8d6:	8d bf       	out	0x3d, r24	; 61
 8d8:	b8 cf       	rjmp	.-144    	; 0x84a <__EEPROM_REGION_LENGTH__+0x4a>

000008da <__udivmodsi4>:
 8da:	a1 e2       	ldi	r26, 0x21	; 33
 8dc:	1a 2e       	mov	r1, r26
 8de:	aa 1b       	sub	r26, r26
 8e0:	bb 1b       	sub	r27, r27
 8e2:	fd 01       	movw	r30, r26
 8e4:	0d c0       	rjmp	.+26     	; 0x900 <__udivmodsi4_ep>

000008e6 <__udivmodsi4_loop>:
 8e6:	aa 1f       	adc	r26, r26
 8e8:	bb 1f       	adc	r27, r27
 8ea:	ee 1f       	adc	r30, r30
 8ec:	ff 1f       	adc	r31, r31
 8ee:	a2 17       	cp	r26, r18
 8f0:	b3 07       	cpc	r27, r19
 8f2:	e4 07       	cpc	r30, r20
 8f4:	f5 07       	cpc	r31, r21
 8f6:	20 f0       	brcs	.+8      	; 0x900 <__udivmodsi4_ep>
 8f8:	a2 1b       	sub	r26, r18
 8fa:	b3 0b       	sbc	r27, r19
 8fc:	e4 0b       	sbc	r30, r20
 8fe:	f5 0b       	sbc	r31, r21

00000900 <__udivmodsi4_ep>:
 900:	66 1f       	adc	r22, r22
 902:	77 1f       	adc	r23, r23
 904:	88 1f       	adc	r24, r24
 906:	99 1f       	adc	r25, r25
 908:	1a 94       	dec	r1
 90a:	69 f7       	brne	.-38     	; 0x8e6 <__udivmodsi4_loop>
 90c:	60 95       	com	r22
 90e:	70 95       	com	r23
 910:	80 95       	com	r24
 912:	90 95       	com	r25
 914:	9b 01       	movw	r18, r22
 916:	ac 01       	movw	r20, r24
 918:	bd 01       	movw	r22, r26
 91a:	cf 01       	movw	r24, r30
 91c:	08 95       	ret

0000091e <__muluhisi3>:
 91e:	0e 94 9a 04 	call	0x934	; 0x934 <__umulhisi3>
 922:	a5 9f       	mul	r26, r21
 924:	90 0d       	add	r25, r0
 926:	b4 9f       	mul	r27, r20
 928:	90 0d       	add	r25, r0
 92a:	a4 9f       	mul	r26, r20
 92c:	80 0d       	add	r24, r0
 92e:	91 1d       	adc	r25, r1
 930:	11 24       	eor	r1, r1
 932:	08 95       	ret

00000934 <__umulhisi3>:
 934:	a2 9f       	mul	r26, r18
 936:	b0 01       	movw	r22, r0
 938:	b3 9f       	mul	r27, r19
 93a:	c0 01       	movw	r24, r0
 93c:	a3 9f       	mul	r26, r19
 93e:	70 0d       	add	r23, r0
 940:	81 1d       	adc	r24, r1
 942:	11 24       	eor	r1, r1
 944:	91 1d       	adc	r25, r1
 946:	b2 9f       	mul	r27, r18
 948:	70 0d       	add	r23, r0
 94a:	81 1d       	adc	r24, r1
 94c:	11 24       	eor	r1, r1
 94e:	91 1d       	adc	r25, r1
 950:	08 95       	ret

00000952 <printf>:
 952:	a0 e0       	ldi	r26, 0x00	; 0
 954:	b0 e0       	ldi	r27, 0x00	; 0
 956:	ef ea       	ldi	r30, 0xAF	; 175
 958:	f4 e0       	ldi	r31, 0x04	; 4
 95a:	0c 94 60 07 	jmp	0xec0	; 0xec0 <__prologue_saves__+0x20>
 95e:	ae 01       	movw	r20, r28
 960:	4b 5f       	subi	r20, 0xFB	; 251
 962:	5f 4f       	sbci	r21, 0xFF	; 255
 964:	fa 01       	movw	r30, r20
 966:	61 91       	ld	r22, Z+
 968:	71 91       	ld	r23, Z+
 96a:	af 01       	movw	r20, r30
 96c:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <__iob+0x2>
 970:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <__iob+0x3>
 974:	0e 94 bf 04 	call	0x97e	; 0x97e <vfprintf>
 978:	e2 e0       	ldi	r30, 0x02	; 2
 97a:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <__epilogue_restores__+0x20>

0000097e <vfprintf>:
 97e:	ab e0       	ldi	r26, 0x0B	; 11
 980:	b0 e0       	ldi	r27, 0x00	; 0
 982:	e5 ec       	ldi	r30, 0xC5	; 197
 984:	f4 e0       	ldi	r31, 0x04	; 4
 986:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__prologue_saves__>
 98a:	6c 01       	movw	r12, r24
 98c:	7b 01       	movw	r14, r22
 98e:	8a 01       	movw	r16, r20
 990:	fc 01       	movw	r30, r24
 992:	17 82       	std	Z+7, r1	; 0x07
 994:	16 82       	std	Z+6, r1	; 0x06
 996:	83 81       	ldd	r24, Z+3	; 0x03
 998:	81 ff       	sbrs	r24, 1
 99a:	cc c1       	rjmp	.+920    	; 0xd34 <vfprintf+0x3b6>
 99c:	ce 01       	movw	r24, r28
 99e:	01 96       	adiw	r24, 0x01	; 1
 9a0:	3c 01       	movw	r6, r24
 9a2:	f6 01       	movw	r30, r12
 9a4:	93 81       	ldd	r25, Z+3	; 0x03
 9a6:	f7 01       	movw	r30, r14
 9a8:	93 fd       	sbrc	r25, 3
 9aa:	85 91       	lpm	r24, Z+
 9ac:	93 ff       	sbrs	r25, 3
 9ae:	81 91       	ld	r24, Z+
 9b0:	7f 01       	movw	r14, r30
 9b2:	88 23       	and	r24, r24
 9b4:	09 f4       	brne	.+2      	; 0x9b8 <vfprintf+0x3a>
 9b6:	ba c1       	rjmp	.+884    	; 0xd2c <vfprintf+0x3ae>
 9b8:	85 32       	cpi	r24, 0x25	; 37
 9ba:	39 f4       	brne	.+14     	; 0x9ca <vfprintf+0x4c>
 9bc:	93 fd       	sbrc	r25, 3
 9be:	85 91       	lpm	r24, Z+
 9c0:	93 ff       	sbrs	r25, 3
 9c2:	81 91       	ld	r24, Z+
 9c4:	7f 01       	movw	r14, r30
 9c6:	85 32       	cpi	r24, 0x25	; 37
 9c8:	29 f4       	brne	.+10     	; 0x9d4 <vfprintf+0x56>
 9ca:	b6 01       	movw	r22, r12
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	0e 94 b6 06 	call	0xd6c	; 0xd6c <fputc>
 9d2:	e7 cf       	rjmp	.-50     	; 0x9a2 <vfprintf+0x24>
 9d4:	91 2c       	mov	r9, r1
 9d6:	21 2c       	mov	r2, r1
 9d8:	31 2c       	mov	r3, r1
 9da:	ff e1       	ldi	r31, 0x1F	; 31
 9dc:	f3 15       	cp	r31, r3
 9de:	d8 f0       	brcs	.+54     	; 0xa16 <vfprintf+0x98>
 9e0:	8b 32       	cpi	r24, 0x2B	; 43
 9e2:	79 f0       	breq	.+30     	; 0xa02 <vfprintf+0x84>
 9e4:	38 f4       	brcc	.+14     	; 0x9f4 <vfprintf+0x76>
 9e6:	80 32       	cpi	r24, 0x20	; 32
 9e8:	79 f0       	breq	.+30     	; 0xa08 <vfprintf+0x8a>
 9ea:	83 32       	cpi	r24, 0x23	; 35
 9ec:	a1 f4       	brne	.+40     	; 0xa16 <vfprintf+0x98>
 9ee:	23 2d       	mov	r18, r3
 9f0:	20 61       	ori	r18, 0x10	; 16
 9f2:	1d c0       	rjmp	.+58     	; 0xa2e <vfprintf+0xb0>
 9f4:	8d 32       	cpi	r24, 0x2D	; 45
 9f6:	61 f0       	breq	.+24     	; 0xa10 <vfprintf+0x92>
 9f8:	80 33       	cpi	r24, 0x30	; 48
 9fa:	69 f4       	brne	.+26     	; 0xa16 <vfprintf+0x98>
 9fc:	23 2d       	mov	r18, r3
 9fe:	21 60       	ori	r18, 0x01	; 1
 a00:	16 c0       	rjmp	.+44     	; 0xa2e <vfprintf+0xb0>
 a02:	83 2d       	mov	r24, r3
 a04:	82 60       	ori	r24, 0x02	; 2
 a06:	38 2e       	mov	r3, r24
 a08:	e3 2d       	mov	r30, r3
 a0a:	e4 60       	ori	r30, 0x04	; 4
 a0c:	3e 2e       	mov	r3, r30
 a0e:	2a c0       	rjmp	.+84     	; 0xa64 <vfprintf+0xe6>
 a10:	f3 2d       	mov	r31, r3
 a12:	f8 60       	ori	r31, 0x08	; 8
 a14:	1d c0       	rjmp	.+58     	; 0xa50 <vfprintf+0xd2>
 a16:	37 fc       	sbrc	r3, 7
 a18:	2d c0       	rjmp	.+90     	; 0xa74 <vfprintf+0xf6>
 a1a:	20 ed       	ldi	r18, 0xD0	; 208
 a1c:	28 0f       	add	r18, r24
 a1e:	2a 30       	cpi	r18, 0x0A	; 10
 a20:	40 f0       	brcs	.+16     	; 0xa32 <vfprintf+0xb4>
 a22:	8e 32       	cpi	r24, 0x2E	; 46
 a24:	b9 f4       	brne	.+46     	; 0xa54 <vfprintf+0xd6>
 a26:	36 fc       	sbrc	r3, 6
 a28:	81 c1       	rjmp	.+770    	; 0xd2c <vfprintf+0x3ae>
 a2a:	23 2d       	mov	r18, r3
 a2c:	20 64       	ori	r18, 0x40	; 64
 a2e:	32 2e       	mov	r3, r18
 a30:	19 c0       	rjmp	.+50     	; 0xa64 <vfprintf+0xe6>
 a32:	36 fe       	sbrs	r3, 6
 a34:	06 c0       	rjmp	.+12     	; 0xa42 <vfprintf+0xc4>
 a36:	8a e0       	ldi	r24, 0x0A	; 10
 a38:	98 9e       	mul	r9, r24
 a3a:	20 0d       	add	r18, r0
 a3c:	11 24       	eor	r1, r1
 a3e:	92 2e       	mov	r9, r18
 a40:	11 c0       	rjmp	.+34     	; 0xa64 <vfprintf+0xe6>
 a42:	ea e0       	ldi	r30, 0x0A	; 10
 a44:	2e 9e       	mul	r2, r30
 a46:	20 0d       	add	r18, r0
 a48:	11 24       	eor	r1, r1
 a4a:	22 2e       	mov	r2, r18
 a4c:	f3 2d       	mov	r31, r3
 a4e:	f0 62       	ori	r31, 0x20	; 32
 a50:	3f 2e       	mov	r3, r31
 a52:	08 c0       	rjmp	.+16     	; 0xa64 <vfprintf+0xe6>
 a54:	8c 36       	cpi	r24, 0x6C	; 108
 a56:	21 f4       	brne	.+8      	; 0xa60 <vfprintf+0xe2>
 a58:	83 2d       	mov	r24, r3
 a5a:	80 68       	ori	r24, 0x80	; 128
 a5c:	38 2e       	mov	r3, r24
 a5e:	02 c0       	rjmp	.+4      	; 0xa64 <vfprintf+0xe6>
 a60:	88 36       	cpi	r24, 0x68	; 104
 a62:	41 f4       	brne	.+16     	; 0xa74 <vfprintf+0xf6>
 a64:	f7 01       	movw	r30, r14
 a66:	93 fd       	sbrc	r25, 3
 a68:	85 91       	lpm	r24, Z+
 a6a:	93 ff       	sbrs	r25, 3
 a6c:	81 91       	ld	r24, Z+
 a6e:	7f 01       	movw	r14, r30
 a70:	81 11       	cpse	r24, r1
 a72:	b3 cf       	rjmp	.-154    	; 0x9da <vfprintf+0x5c>
 a74:	98 2f       	mov	r25, r24
 a76:	9f 7d       	andi	r25, 0xDF	; 223
 a78:	95 54       	subi	r25, 0x45	; 69
 a7a:	93 30       	cpi	r25, 0x03	; 3
 a7c:	28 f4       	brcc	.+10     	; 0xa88 <vfprintf+0x10a>
 a7e:	0c 5f       	subi	r16, 0xFC	; 252
 a80:	1f 4f       	sbci	r17, 0xFF	; 255
 a82:	9f e3       	ldi	r25, 0x3F	; 63
 a84:	99 83       	std	Y+1, r25	; 0x01
 a86:	0d c0       	rjmp	.+26     	; 0xaa2 <vfprintf+0x124>
 a88:	83 36       	cpi	r24, 0x63	; 99
 a8a:	31 f0       	breq	.+12     	; 0xa98 <vfprintf+0x11a>
 a8c:	83 37       	cpi	r24, 0x73	; 115
 a8e:	71 f0       	breq	.+28     	; 0xaac <vfprintf+0x12e>
 a90:	83 35       	cpi	r24, 0x53	; 83
 a92:	09 f0       	breq	.+2      	; 0xa96 <vfprintf+0x118>
 a94:	59 c0       	rjmp	.+178    	; 0xb48 <vfprintf+0x1ca>
 a96:	21 c0       	rjmp	.+66     	; 0xada <vfprintf+0x15c>
 a98:	f8 01       	movw	r30, r16
 a9a:	80 81       	ld	r24, Z
 a9c:	89 83       	std	Y+1, r24	; 0x01
 a9e:	0e 5f       	subi	r16, 0xFE	; 254
 aa0:	1f 4f       	sbci	r17, 0xFF	; 255
 aa2:	88 24       	eor	r8, r8
 aa4:	83 94       	inc	r8
 aa6:	91 2c       	mov	r9, r1
 aa8:	53 01       	movw	r10, r6
 aaa:	13 c0       	rjmp	.+38     	; 0xad2 <vfprintf+0x154>
 aac:	28 01       	movw	r4, r16
 aae:	f2 e0       	ldi	r31, 0x02	; 2
 ab0:	4f 0e       	add	r4, r31
 ab2:	51 1c       	adc	r5, r1
 ab4:	f8 01       	movw	r30, r16
 ab6:	a0 80       	ld	r10, Z
 ab8:	b1 80       	ldd	r11, Z+1	; 0x01
 aba:	36 fe       	sbrs	r3, 6
 abc:	03 c0       	rjmp	.+6      	; 0xac4 <vfprintf+0x146>
 abe:	69 2d       	mov	r22, r9
 ac0:	70 e0       	ldi	r23, 0x00	; 0
 ac2:	02 c0       	rjmp	.+4      	; 0xac8 <vfprintf+0x14a>
 ac4:	6f ef       	ldi	r22, 0xFF	; 255
 ac6:	7f ef       	ldi	r23, 0xFF	; 255
 ac8:	c5 01       	movw	r24, r10
 aca:	0e 94 ab 06 	call	0xd56	; 0xd56 <strnlen>
 ace:	4c 01       	movw	r8, r24
 ad0:	82 01       	movw	r16, r4
 ad2:	f3 2d       	mov	r31, r3
 ad4:	ff 77       	andi	r31, 0x7F	; 127
 ad6:	3f 2e       	mov	r3, r31
 ad8:	16 c0       	rjmp	.+44     	; 0xb06 <vfprintf+0x188>
 ada:	28 01       	movw	r4, r16
 adc:	22 e0       	ldi	r18, 0x02	; 2
 ade:	42 0e       	add	r4, r18
 ae0:	51 1c       	adc	r5, r1
 ae2:	f8 01       	movw	r30, r16
 ae4:	a0 80       	ld	r10, Z
 ae6:	b1 80       	ldd	r11, Z+1	; 0x01
 ae8:	36 fe       	sbrs	r3, 6
 aea:	03 c0       	rjmp	.+6      	; 0xaf2 <vfprintf+0x174>
 aec:	69 2d       	mov	r22, r9
 aee:	70 e0       	ldi	r23, 0x00	; 0
 af0:	02 c0       	rjmp	.+4      	; 0xaf6 <vfprintf+0x178>
 af2:	6f ef       	ldi	r22, 0xFF	; 255
 af4:	7f ef       	ldi	r23, 0xFF	; 255
 af6:	c5 01       	movw	r24, r10
 af8:	0e 94 a0 06 	call	0xd40	; 0xd40 <strnlen_P>
 afc:	4c 01       	movw	r8, r24
 afe:	f3 2d       	mov	r31, r3
 b00:	f0 68       	ori	r31, 0x80	; 128
 b02:	3f 2e       	mov	r3, r31
 b04:	82 01       	movw	r16, r4
 b06:	33 fc       	sbrc	r3, 3
 b08:	1b c0       	rjmp	.+54     	; 0xb40 <vfprintf+0x1c2>
 b0a:	82 2d       	mov	r24, r2
 b0c:	90 e0       	ldi	r25, 0x00	; 0
 b0e:	88 16       	cp	r8, r24
 b10:	99 06       	cpc	r9, r25
 b12:	b0 f4       	brcc	.+44     	; 0xb40 <vfprintf+0x1c2>
 b14:	b6 01       	movw	r22, r12
 b16:	80 e2       	ldi	r24, 0x20	; 32
 b18:	90 e0       	ldi	r25, 0x00	; 0
 b1a:	0e 94 b6 06 	call	0xd6c	; 0xd6c <fputc>
 b1e:	2a 94       	dec	r2
 b20:	f4 cf       	rjmp	.-24     	; 0xb0a <vfprintf+0x18c>
 b22:	f5 01       	movw	r30, r10
 b24:	37 fc       	sbrc	r3, 7
 b26:	85 91       	lpm	r24, Z+
 b28:	37 fe       	sbrs	r3, 7
 b2a:	81 91       	ld	r24, Z+
 b2c:	5f 01       	movw	r10, r30
 b2e:	b6 01       	movw	r22, r12
 b30:	90 e0       	ldi	r25, 0x00	; 0
 b32:	0e 94 b6 06 	call	0xd6c	; 0xd6c <fputc>
 b36:	21 10       	cpse	r2, r1
 b38:	2a 94       	dec	r2
 b3a:	21 e0       	ldi	r18, 0x01	; 1
 b3c:	82 1a       	sub	r8, r18
 b3e:	91 08       	sbc	r9, r1
 b40:	81 14       	cp	r8, r1
 b42:	91 04       	cpc	r9, r1
 b44:	71 f7       	brne	.-36     	; 0xb22 <vfprintf+0x1a4>
 b46:	e8 c0       	rjmp	.+464    	; 0xd18 <vfprintf+0x39a>
 b48:	84 36       	cpi	r24, 0x64	; 100
 b4a:	11 f0       	breq	.+4      	; 0xb50 <vfprintf+0x1d2>
 b4c:	89 36       	cpi	r24, 0x69	; 105
 b4e:	41 f5       	brne	.+80     	; 0xba0 <vfprintf+0x222>
 b50:	f8 01       	movw	r30, r16
 b52:	37 fe       	sbrs	r3, 7
 b54:	07 c0       	rjmp	.+14     	; 0xb64 <vfprintf+0x1e6>
 b56:	60 81       	ld	r22, Z
 b58:	71 81       	ldd	r23, Z+1	; 0x01
 b5a:	82 81       	ldd	r24, Z+2	; 0x02
 b5c:	93 81       	ldd	r25, Z+3	; 0x03
 b5e:	0c 5f       	subi	r16, 0xFC	; 252
 b60:	1f 4f       	sbci	r17, 0xFF	; 255
 b62:	08 c0       	rjmp	.+16     	; 0xb74 <vfprintf+0x1f6>
 b64:	60 81       	ld	r22, Z
 b66:	71 81       	ldd	r23, Z+1	; 0x01
 b68:	07 2e       	mov	r0, r23
 b6a:	00 0c       	add	r0, r0
 b6c:	88 0b       	sbc	r24, r24
 b6e:	99 0b       	sbc	r25, r25
 b70:	0e 5f       	subi	r16, 0xFE	; 254
 b72:	1f 4f       	sbci	r17, 0xFF	; 255
 b74:	f3 2d       	mov	r31, r3
 b76:	ff 76       	andi	r31, 0x6F	; 111
 b78:	3f 2e       	mov	r3, r31
 b7a:	97 ff       	sbrs	r25, 7
 b7c:	09 c0       	rjmp	.+18     	; 0xb90 <vfprintf+0x212>
 b7e:	90 95       	com	r25
 b80:	80 95       	com	r24
 b82:	70 95       	com	r23
 b84:	61 95       	neg	r22
 b86:	7f 4f       	sbci	r23, 0xFF	; 255
 b88:	8f 4f       	sbci	r24, 0xFF	; 255
 b8a:	9f 4f       	sbci	r25, 0xFF	; 255
 b8c:	f0 68       	ori	r31, 0x80	; 128
 b8e:	3f 2e       	mov	r3, r31
 b90:	2a e0       	ldi	r18, 0x0A	; 10
 b92:	30 e0       	ldi	r19, 0x00	; 0
 b94:	a3 01       	movw	r20, r6
 b96:	0e 94 f2 06 	call	0xde4	; 0xde4 <__ultoa_invert>
 b9a:	88 2e       	mov	r8, r24
 b9c:	86 18       	sub	r8, r6
 b9e:	45 c0       	rjmp	.+138    	; 0xc2a <vfprintf+0x2ac>
 ba0:	85 37       	cpi	r24, 0x75	; 117
 ba2:	31 f4       	brne	.+12     	; 0xbb0 <vfprintf+0x232>
 ba4:	23 2d       	mov	r18, r3
 ba6:	2f 7e       	andi	r18, 0xEF	; 239
 ba8:	b2 2e       	mov	r11, r18
 baa:	2a e0       	ldi	r18, 0x0A	; 10
 bac:	30 e0       	ldi	r19, 0x00	; 0
 bae:	25 c0       	rjmp	.+74     	; 0xbfa <vfprintf+0x27c>
 bb0:	93 2d       	mov	r25, r3
 bb2:	99 7f       	andi	r25, 0xF9	; 249
 bb4:	b9 2e       	mov	r11, r25
 bb6:	8f 36       	cpi	r24, 0x6F	; 111
 bb8:	c1 f0       	breq	.+48     	; 0xbea <vfprintf+0x26c>
 bba:	18 f4       	brcc	.+6      	; 0xbc2 <vfprintf+0x244>
 bbc:	88 35       	cpi	r24, 0x58	; 88
 bbe:	79 f0       	breq	.+30     	; 0xbde <vfprintf+0x260>
 bc0:	b5 c0       	rjmp	.+362    	; 0xd2c <vfprintf+0x3ae>
 bc2:	80 37       	cpi	r24, 0x70	; 112
 bc4:	19 f0       	breq	.+6      	; 0xbcc <vfprintf+0x24e>
 bc6:	88 37       	cpi	r24, 0x78	; 120
 bc8:	21 f0       	breq	.+8      	; 0xbd2 <vfprintf+0x254>
 bca:	b0 c0       	rjmp	.+352    	; 0xd2c <vfprintf+0x3ae>
 bcc:	e9 2f       	mov	r30, r25
 bce:	e0 61       	ori	r30, 0x10	; 16
 bd0:	be 2e       	mov	r11, r30
 bd2:	b4 fe       	sbrs	r11, 4
 bd4:	0d c0       	rjmp	.+26     	; 0xbf0 <vfprintf+0x272>
 bd6:	fb 2d       	mov	r31, r11
 bd8:	f4 60       	ori	r31, 0x04	; 4
 bda:	bf 2e       	mov	r11, r31
 bdc:	09 c0       	rjmp	.+18     	; 0xbf0 <vfprintf+0x272>
 bde:	34 fe       	sbrs	r3, 4
 be0:	0a c0       	rjmp	.+20     	; 0xbf6 <vfprintf+0x278>
 be2:	29 2f       	mov	r18, r25
 be4:	26 60       	ori	r18, 0x06	; 6
 be6:	b2 2e       	mov	r11, r18
 be8:	06 c0       	rjmp	.+12     	; 0xbf6 <vfprintf+0x278>
 bea:	28 e0       	ldi	r18, 0x08	; 8
 bec:	30 e0       	ldi	r19, 0x00	; 0
 bee:	05 c0       	rjmp	.+10     	; 0xbfa <vfprintf+0x27c>
 bf0:	20 e1       	ldi	r18, 0x10	; 16
 bf2:	30 e0       	ldi	r19, 0x00	; 0
 bf4:	02 c0       	rjmp	.+4      	; 0xbfa <vfprintf+0x27c>
 bf6:	20 e1       	ldi	r18, 0x10	; 16
 bf8:	32 e0       	ldi	r19, 0x02	; 2
 bfa:	f8 01       	movw	r30, r16
 bfc:	b7 fe       	sbrs	r11, 7
 bfe:	07 c0       	rjmp	.+14     	; 0xc0e <vfprintf+0x290>
 c00:	60 81       	ld	r22, Z
 c02:	71 81       	ldd	r23, Z+1	; 0x01
 c04:	82 81       	ldd	r24, Z+2	; 0x02
 c06:	93 81       	ldd	r25, Z+3	; 0x03
 c08:	0c 5f       	subi	r16, 0xFC	; 252
 c0a:	1f 4f       	sbci	r17, 0xFF	; 255
 c0c:	06 c0       	rjmp	.+12     	; 0xc1a <vfprintf+0x29c>
 c0e:	60 81       	ld	r22, Z
 c10:	71 81       	ldd	r23, Z+1	; 0x01
 c12:	80 e0       	ldi	r24, 0x00	; 0
 c14:	90 e0       	ldi	r25, 0x00	; 0
 c16:	0e 5f       	subi	r16, 0xFE	; 254
 c18:	1f 4f       	sbci	r17, 0xFF	; 255
 c1a:	a3 01       	movw	r20, r6
 c1c:	0e 94 f2 06 	call	0xde4	; 0xde4 <__ultoa_invert>
 c20:	88 2e       	mov	r8, r24
 c22:	86 18       	sub	r8, r6
 c24:	fb 2d       	mov	r31, r11
 c26:	ff 77       	andi	r31, 0x7F	; 127
 c28:	3f 2e       	mov	r3, r31
 c2a:	36 fe       	sbrs	r3, 6
 c2c:	0d c0       	rjmp	.+26     	; 0xc48 <vfprintf+0x2ca>
 c2e:	23 2d       	mov	r18, r3
 c30:	2e 7f       	andi	r18, 0xFE	; 254
 c32:	a2 2e       	mov	r10, r18
 c34:	89 14       	cp	r8, r9
 c36:	58 f4       	brcc	.+22     	; 0xc4e <vfprintf+0x2d0>
 c38:	34 fe       	sbrs	r3, 4
 c3a:	0b c0       	rjmp	.+22     	; 0xc52 <vfprintf+0x2d4>
 c3c:	32 fc       	sbrc	r3, 2
 c3e:	09 c0       	rjmp	.+18     	; 0xc52 <vfprintf+0x2d4>
 c40:	83 2d       	mov	r24, r3
 c42:	8e 7e       	andi	r24, 0xEE	; 238
 c44:	a8 2e       	mov	r10, r24
 c46:	05 c0       	rjmp	.+10     	; 0xc52 <vfprintf+0x2d4>
 c48:	b8 2c       	mov	r11, r8
 c4a:	a3 2c       	mov	r10, r3
 c4c:	03 c0       	rjmp	.+6      	; 0xc54 <vfprintf+0x2d6>
 c4e:	b8 2c       	mov	r11, r8
 c50:	01 c0       	rjmp	.+2      	; 0xc54 <vfprintf+0x2d6>
 c52:	b9 2c       	mov	r11, r9
 c54:	a4 fe       	sbrs	r10, 4
 c56:	0f c0       	rjmp	.+30     	; 0xc76 <vfprintf+0x2f8>
 c58:	fe 01       	movw	r30, r28
 c5a:	e8 0d       	add	r30, r8
 c5c:	f1 1d       	adc	r31, r1
 c5e:	80 81       	ld	r24, Z
 c60:	80 33       	cpi	r24, 0x30	; 48
 c62:	21 f4       	brne	.+8      	; 0xc6c <vfprintf+0x2ee>
 c64:	9a 2d       	mov	r25, r10
 c66:	99 7e       	andi	r25, 0xE9	; 233
 c68:	a9 2e       	mov	r10, r25
 c6a:	09 c0       	rjmp	.+18     	; 0xc7e <vfprintf+0x300>
 c6c:	a2 fe       	sbrs	r10, 2
 c6e:	06 c0       	rjmp	.+12     	; 0xc7c <vfprintf+0x2fe>
 c70:	b3 94       	inc	r11
 c72:	b3 94       	inc	r11
 c74:	04 c0       	rjmp	.+8      	; 0xc7e <vfprintf+0x300>
 c76:	8a 2d       	mov	r24, r10
 c78:	86 78       	andi	r24, 0x86	; 134
 c7a:	09 f0       	breq	.+2      	; 0xc7e <vfprintf+0x300>
 c7c:	b3 94       	inc	r11
 c7e:	a3 fc       	sbrc	r10, 3
 c80:	11 c0       	rjmp	.+34     	; 0xca4 <vfprintf+0x326>
 c82:	a0 fe       	sbrs	r10, 0
 c84:	06 c0       	rjmp	.+12     	; 0xc92 <vfprintf+0x314>
 c86:	b2 14       	cp	r11, r2
 c88:	88 f4       	brcc	.+34     	; 0xcac <vfprintf+0x32e>
 c8a:	28 0c       	add	r2, r8
 c8c:	92 2c       	mov	r9, r2
 c8e:	9b 18       	sub	r9, r11
 c90:	0e c0       	rjmp	.+28     	; 0xcae <vfprintf+0x330>
 c92:	b2 14       	cp	r11, r2
 c94:	60 f4       	brcc	.+24     	; 0xcae <vfprintf+0x330>
 c96:	b6 01       	movw	r22, r12
 c98:	80 e2       	ldi	r24, 0x20	; 32
 c9a:	90 e0       	ldi	r25, 0x00	; 0
 c9c:	0e 94 b6 06 	call	0xd6c	; 0xd6c <fputc>
 ca0:	b3 94       	inc	r11
 ca2:	f7 cf       	rjmp	.-18     	; 0xc92 <vfprintf+0x314>
 ca4:	b2 14       	cp	r11, r2
 ca6:	18 f4       	brcc	.+6      	; 0xcae <vfprintf+0x330>
 ca8:	2b 18       	sub	r2, r11
 caa:	02 c0       	rjmp	.+4      	; 0xcb0 <vfprintf+0x332>
 cac:	98 2c       	mov	r9, r8
 cae:	21 2c       	mov	r2, r1
 cb0:	a4 fe       	sbrs	r10, 4
 cb2:	10 c0       	rjmp	.+32     	; 0xcd4 <vfprintf+0x356>
 cb4:	b6 01       	movw	r22, r12
 cb6:	80 e3       	ldi	r24, 0x30	; 48
 cb8:	90 e0       	ldi	r25, 0x00	; 0
 cba:	0e 94 b6 06 	call	0xd6c	; 0xd6c <fputc>
 cbe:	a2 fe       	sbrs	r10, 2
 cc0:	17 c0       	rjmp	.+46     	; 0xcf0 <vfprintf+0x372>
 cc2:	a1 fc       	sbrc	r10, 1
 cc4:	03 c0       	rjmp	.+6      	; 0xccc <vfprintf+0x34e>
 cc6:	88 e7       	ldi	r24, 0x78	; 120
 cc8:	90 e0       	ldi	r25, 0x00	; 0
 cca:	02 c0       	rjmp	.+4      	; 0xcd0 <vfprintf+0x352>
 ccc:	88 e5       	ldi	r24, 0x58	; 88
 cce:	90 e0       	ldi	r25, 0x00	; 0
 cd0:	b6 01       	movw	r22, r12
 cd2:	0c c0       	rjmp	.+24     	; 0xcec <vfprintf+0x36e>
 cd4:	8a 2d       	mov	r24, r10
 cd6:	86 78       	andi	r24, 0x86	; 134
 cd8:	59 f0       	breq	.+22     	; 0xcf0 <vfprintf+0x372>
 cda:	a1 fe       	sbrs	r10, 1
 cdc:	02 c0       	rjmp	.+4      	; 0xce2 <vfprintf+0x364>
 cde:	8b e2       	ldi	r24, 0x2B	; 43
 ce0:	01 c0       	rjmp	.+2      	; 0xce4 <vfprintf+0x366>
 ce2:	80 e2       	ldi	r24, 0x20	; 32
 ce4:	a7 fc       	sbrc	r10, 7
 ce6:	8d e2       	ldi	r24, 0x2D	; 45
 ce8:	b6 01       	movw	r22, r12
 cea:	90 e0       	ldi	r25, 0x00	; 0
 cec:	0e 94 b6 06 	call	0xd6c	; 0xd6c <fputc>
 cf0:	89 14       	cp	r8, r9
 cf2:	38 f4       	brcc	.+14     	; 0xd02 <vfprintf+0x384>
 cf4:	b6 01       	movw	r22, r12
 cf6:	80 e3       	ldi	r24, 0x30	; 48
 cf8:	90 e0       	ldi	r25, 0x00	; 0
 cfa:	0e 94 b6 06 	call	0xd6c	; 0xd6c <fputc>
 cfe:	9a 94       	dec	r9
 d00:	f7 cf       	rjmp	.-18     	; 0xcf0 <vfprintf+0x372>
 d02:	8a 94       	dec	r8
 d04:	f3 01       	movw	r30, r6
 d06:	e8 0d       	add	r30, r8
 d08:	f1 1d       	adc	r31, r1
 d0a:	80 81       	ld	r24, Z
 d0c:	b6 01       	movw	r22, r12
 d0e:	90 e0       	ldi	r25, 0x00	; 0
 d10:	0e 94 b6 06 	call	0xd6c	; 0xd6c <fputc>
 d14:	81 10       	cpse	r8, r1
 d16:	f5 cf       	rjmp	.-22     	; 0xd02 <vfprintf+0x384>
 d18:	22 20       	and	r2, r2
 d1a:	09 f4       	brne	.+2      	; 0xd1e <vfprintf+0x3a0>
 d1c:	42 ce       	rjmp	.-892    	; 0x9a2 <vfprintf+0x24>
 d1e:	b6 01       	movw	r22, r12
 d20:	80 e2       	ldi	r24, 0x20	; 32
 d22:	90 e0       	ldi	r25, 0x00	; 0
 d24:	0e 94 b6 06 	call	0xd6c	; 0xd6c <fputc>
 d28:	2a 94       	dec	r2
 d2a:	f6 cf       	rjmp	.-20     	; 0xd18 <vfprintf+0x39a>
 d2c:	f6 01       	movw	r30, r12
 d2e:	86 81       	ldd	r24, Z+6	; 0x06
 d30:	97 81       	ldd	r25, Z+7	; 0x07
 d32:	02 c0       	rjmp	.+4      	; 0xd38 <vfprintf+0x3ba>
 d34:	8f ef       	ldi	r24, 0xFF	; 255
 d36:	9f ef       	ldi	r25, 0xFF	; 255
 d38:	2b 96       	adiw	r28, 0x0b	; 11
 d3a:	e2 e1       	ldi	r30, 0x12	; 18
 d3c:	0c 94 6c 07 	jmp	0xed8	; 0xed8 <__epilogue_restores__>

00000d40 <strnlen_P>:
 d40:	fc 01       	movw	r30, r24
 d42:	05 90       	lpm	r0, Z+
 d44:	61 50       	subi	r22, 0x01	; 1
 d46:	70 40       	sbci	r23, 0x00	; 0
 d48:	01 10       	cpse	r0, r1
 d4a:	d8 f7       	brcc	.-10     	; 0xd42 <strnlen_P+0x2>
 d4c:	80 95       	com	r24
 d4e:	90 95       	com	r25
 d50:	8e 0f       	add	r24, r30
 d52:	9f 1f       	adc	r25, r31
 d54:	08 95       	ret

00000d56 <strnlen>:
 d56:	fc 01       	movw	r30, r24
 d58:	61 50       	subi	r22, 0x01	; 1
 d5a:	70 40       	sbci	r23, 0x00	; 0
 d5c:	01 90       	ld	r0, Z+
 d5e:	01 10       	cpse	r0, r1
 d60:	d8 f7       	brcc	.-10     	; 0xd58 <strnlen+0x2>
 d62:	80 95       	com	r24
 d64:	90 95       	com	r25
 d66:	8e 0f       	add	r24, r30
 d68:	9f 1f       	adc	r25, r31
 d6a:	08 95       	ret

00000d6c <fputc>:
 d6c:	0f 93       	push	r16
 d6e:	1f 93       	push	r17
 d70:	cf 93       	push	r28
 d72:	df 93       	push	r29
 d74:	fb 01       	movw	r30, r22
 d76:	23 81       	ldd	r18, Z+3	; 0x03
 d78:	21 fd       	sbrc	r18, 1
 d7a:	03 c0       	rjmp	.+6      	; 0xd82 <fputc+0x16>
 d7c:	8f ef       	ldi	r24, 0xFF	; 255
 d7e:	9f ef       	ldi	r25, 0xFF	; 255
 d80:	2c c0       	rjmp	.+88     	; 0xdda <fputc+0x6e>
 d82:	22 ff       	sbrs	r18, 2
 d84:	16 c0       	rjmp	.+44     	; 0xdb2 <fputc+0x46>
 d86:	46 81       	ldd	r20, Z+6	; 0x06
 d88:	57 81       	ldd	r21, Z+7	; 0x07
 d8a:	24 81       	ldd	r18, Z+4	; 0x04
 d8c:	35 81       	ldd	r19, Z+5	; 0x05
 d8e:	42 17       	cp	r20, r18
 d90:	53 07       	cpc	r21, r19
 d92:	44 f4       	brge	.+16     	; 0xda4 <fputc+0x38>
 d94:	a0 81       	ld	r26, Z
 d96:	b1 81       	ldd	r27, Z+1	; 0x01
 d98:	9d 01       	movw	r18, r26
 d9a:	2f 5f       	subi	r18, 0xFF	; 255
 d9c:	3f 4f       	sbci	r19, 0xFF	; 255
 d9e:	31 83       	std	Z+1, r19	; 0x01
 da0:	20 83       	st	Z, r18
 da2:	8c 93       	st	X, r24
 da4:	26 81       	ldd	r18, Z+6	; 0x06
 da6:	37 81       	ldd	r19, Z+7	; 0x07
 da8:	2f 5f       	subi	r18, 0xFF	; 255
 daa:	3f 4f       	sbci	r19, 0xFF	; 255
 dac:	37 83       	std	Z+7, r19	; 0x07
 dae:	26 83       	std	Z+6, r18	; 0x06
 db0:	14 c0       	rjmp	.+40     	; 0xdda <fputc+0x6e>
 db2:	8b 01       	movw	r16, r22
 db4:	ec 01       	movw	r28, r24
 db6:	fb 01       	movw	r30, r22
 db8:	00 84       	ldd	r0, Z+8	; 0x08
 dba:	f1 85       	ldd	r31, Z+9	; 0x09
 dbc:	e0 2d       	mov	r30, r0
 dbe:	09 95       	icall
 dc0:	89 2b       	or	r24, r25
 dc2:	e1 f6       	brne	.-72     	; 0xd7c <fputc+0x10>
 dc4:	d8 01       	movw	r26, r16
 dc6:	16 96       	adiw	r26, 0x06	; 6
 dc8:	8d 91       	ld	r24, X+
 dca:	9c 91       	ld	r25, X
 dcc:	17 97       	sbiw	r26, 0x07	; 7
 dce:	01 96       	adiw	r24, 0x01	; 1
 dd0:	17 96       	adiw	r26, 0x07	; 7
 dd2:	9c 93       	st	X, r25
 dd4:	8e 93       	st	-X, r24
 dd6:	16 97       	sbiw	r26, 0x06	; 6
 dd8:	ce 01       	movw	r24, r28
 dda:	df 91       	pop	r29
 ddc:	cf 91       	pop	r28
 dde:	1f 91       	pop	r17
 de0:	0f 91       	pop	r16
 de2:	08 95       	ret

00000de4 <__ultoa_invert>:
 de4:	fa 01       	movw	r30, r20
 de6:	aa 27       	eor	r26, r26
 de8:	28 30       	cpi	r18, 0x08	; 8
 dea:	51 f1       	breq	.+84     	; 0xe40 <__ultoa_invert+0x5c>
 dec:	20 31       	cpi	r18, 0x10	; 16
 dee:	81 f1       	breq	.+96     	; 0xe50 <__ultoa_invert+0x6c>
 df0:	e8 94       	clt
 df2:	6f 93       	push	r22
 df4:	6e 7f       	andi	r22, 0xFE	; 254
 df6:	6e 5f       	subi	r22, 0xFE	; 254
 df8:	7f 4f       	sbci	r23, 0xFF	; 255
 dfa:	8f 4f       	sbci	r24, 0xFF	; 255
 dfc:	9f 4f       	sbci	r25, 0xFF	; 255
 dfe:	af 4f       	sbci	r26, 0xFF	; 255
 e00:	b1 e0       	ldi	r27, 0x01	; 1
 e02:	3e d0       	rcall	.+124    	; 0xe80 <__ultoa_invert+0x9c>
 e04:	b4 e0       	ldi	r27, 0x04	; 4
 e06:	3c d0       	rcall	.+120    	; 0xe80 <__ultoa_invert+0x9c>
 e08:	67 0f       	add	r22, r23
 e0a:	78 1f       	adc	r23, r24
 e0c:	89 1f       	adc	r24, r25
 e0e:	9a 1f       	adc	r25, r26
 e10:	a1 1d       	adc	r26, r1
 e12:	68 0f       	add	r22, r24
 e14:	79 1f       	adc	r23, r25
 e16:	8a 1f       	adc	r24, r26
 e18:	91 1d       	adc	r25, r1
 e1a:	a1 1d       	adc	r26, r1
 e1c:	6a 0f       	add	r22, r26
 e1e:	71 1d       	adc	r23, r1
 e20:	81 1d       	adc	r24, r1
 e22:	91 1d       	adc	r25, r1
 e24:	a1 1d       	adc	r26, r1
 e26:	20 d0       	rcall	.+64     	; 0xe68 <__ultoa_invert+0x84>
 e28:	09 f4       	brne	.+2      	; 0xe2c <__ultoa_invert+0x48>
 e2a:	68 94       	set
 e2c:	3f 91       	pop	r19
 e2e:	2a e0       	ldi	r18, 0x0A	; 10
 e30:	26 9f       	mul	r18, r22
 e32:	11 24       	eor	r1, r1
 e34:	30 19       	sub	r19, r0
 e36:	30 5d       	subi	r19, 0xD0	; 208
 e38:	31 93       	st	Z+, r19
 e3a:	de f6       	brtc	.-74     	; 0xdf2 <__ultoa_invert+0xe>
 e3c:	cf 01       	movw	r24, r30
 e3e:	08 95       	ret
 e40:	46 2f       	mov	r20, r22
 e42:	47 70       	andi	r20, 0x07	; 7
 e44:	40 5d       	subi	r20, 0xD0	; 208
 e46:	41 93       	st	Z+, r20
 e48:	b3 e0       	ldi	r27, 0x03	; 3
 e4a:	0f d0       	rcall	.+30     	; 0xe6a <__ultoa_invert+0x86>
 e4c:	c9 f7       	brne	.-14     	; 0xe40 <__ultoa_invert+0x5c>
 e4e:	f6 cf       	rjmp	.-20     	; 0xe3c <__ultoa_invert+0x58>
 e50:	46 2f       	mov	r20, r22
 e52:	4f 70       	andi	r20, 0x0F	; 15
 e54:	40 5d       	subi	r20, 0xD0	; 208
 e56:	4a 33       	cpi	r20, 0x3A	; 58
 e58:	18 f0       	brcs	.+6      	; 0xe60 <__ultoa_invert+0x7c>
 e5a:	49 5d       	subi	r20, 0xD9	; 217
 e5c:	31 fd       	sbrc	r19, 1
 e5e:	40 52       	subi	r20, 0x20	; 32
 e60:	41 93       	st	Z+, r20
 e62:	02 d0       	rcall	.+4      	; 0xe68 <__ultoa_invert+0x84>
 e64:	a9 f7       	brne	.-22     	; 0xe50 <__ultoa_invert+0x6c>
 e66:	ea cf       	rjmp	.-44     	; 0xe3c <__ultoa_invert+0x58>
 e68:	b4 e0       	ldi	r27, 0x04	; 4
 e6a:	a6 95       	lsr	r26
 e6c:	97 95       	ror	r25
 e6e:	87 95       	ror	r24
 e70:	77 95       	ror	r23
 e72:	67 95       	ror	r22
 e74:	ba 95       	dec	r27
 e76:	c9 f7       	brne	.-14     	; 0xe6a <__ultoa_invert+0x86>
 e78:	00 97       	sbiw	r24, 0x00	; 0
 e7a:	61 05       	cpc	r22, r1
 e7c:	71 05       	cpc	r23, r1
 e7e:	08 95       	ret
 e80:	9b 01       	movw	r18, r22
 e82:	ac 01       	movw	r20, r24
 e84:	0a 2e       	mov	r0, r26
 e86:	06 94       	lsr	r0
 e88:	57 95       	ror	r21
 e8a:	47 95       	ror	r20
 e8c:	37 95       	ror	r19
 e8e:	27 95       	ror	r18
 e90:	ba 95       	dec	r27
 e92:	c9 f7       	brne	.-14     	; 0xe86 <__ultoa_invert+0xa2>
 e94:	62 0f       	add	r22, r18
 e96:	73 1f       	adc	r23, r19
 e98:	84 1f       	adc	r24, r20
 e9a:	95 1f       	adc	r25, r21
 e9c:	a0 1d       	adc	r26, r0
 e9e:	08 95       	ret

00000ea0 <__prologue_saves__>:
 ea0:	2f 92       	push	r2
 ea2:	3f 92       	push	r3
 ea4:	4f 92       	push	r4
 ea6:	5f 92       	push	r5
 ea8:	6f 92       	push	r6
 eaa:	7f 92       	push	r7
 eac:	8f 92       	push	r8
 eae:	9f 92       	push	r9
 eb0:	af 92       	push	r10
 eb2:	bf 92       	push	r11
 eb4:	cf 92       	push	r12
 eb6:	df 92       	push	r13
 eb8:	ef 92       	push	r14
 eba:	ff 92       	push	r15
 ebc:	0f 93       	push	r16
 ebe:	1f 93       	push	r17
 ec0:	cf 93       	push	r28
 ec2:	df 93       	push	r29
 ec4:	cd b7       	in	r28, 0x3d	; 61
 ec6:	de b7       	in	r29, 0x3e	; 62
 ec8:	ca 1b       	sub	r28, r26
 eca:	db 0b       	sbc	r29, r27
 ecc:	0f b6       	in	r0, 0x3f	; 63
 ece:	f8 94       	cli
 ed0:	de bf       	out	0x3e, r29	; 62
 ed2:	0f be       	out	0x3f, r0	; 63
 ed4:	cd bf       	out	0x3d, r28	; 61
 ed6:	09 94       	ijmp

00000ed8 <__epilogue_restores__>:
 ed8:	2a 88       	ldd	r2, Y+18	; 0x12
 eda:	39 88       	ldd	r3, Y+17	; 0x11
 edc:	48 88       	ldd	r4, Y+16	; 0x10
 ede:	5f 84       	ldd	r5, Y+15	; 0x0f
 ee0:	6e 84       	ldd	r6, Y+14	; 0x0e
 ee2:	7d 84       	ldd	r7, Y+13	; 0x0d
 ee4:	8c 84       	ldd	r8, Y+12	; 0x0c
 ee6:	9b 84       	ldd	r9, Y+11	; 0x0b
 ee8:	aa 84       	ldd	r10, Y+10	; 0x0a
 eea:	b9 84       	ldd	r11, Y+9	; 0x09
 eec:	c8 84       	ldd	r12, Y+8	; 0x08
 eee:	df 80       	ldd	r13, Y+7	; 0x07
 ef0:	ee 80       	ldd	r14, Y+6	; 0x06
 ef2:	fd 80       	ldd	r15, Y+5	; 0x05
 ef4:	0c 81       	ldd	r16, Y+4	; 0x04
 ef6:	1b 81       	ldd	r17, Y+3	; 0x03
 ef8:	aa 81       	ldd	r26, Y+2	; 0x02
 efa:	b9 81       	ldd	r27, Y+1	; 0x01
 efc:	ce 0f       	add	r28, r30
 efe:	d1 1d       	adc	r29, r1
 f00:	0f b6       	in	r0, 0x3f	; 63
 f02:	f8 94       	cli
 f04:	de bf       	out	0x3e, r29	; 62
 f06:	0f be       	out	0x3f, r0	; 63
 f08:	cd bf       	out	0x3d, r28	; 61
 f0a:	ed 01       	movw	r28, r26
 f0c:	08 95       	ret

00000f0e <_exit>:
 f0e:	f8 94       	cli

00000f10 <__stop_program>:
 f10:	ff cf       	rjmp	.-2      	; 0xf10 <__stop_program>
